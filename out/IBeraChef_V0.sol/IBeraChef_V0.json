{"abi":[{"type":"function","name":"activateReadyQueuedRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getActiveRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V0.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getDefaultRewardAllocation","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V0.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getQueuedRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V0.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getSetActiveRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V0.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"isQueuedRewardAllocationReady","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isReady","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"queueNewRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"},{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDefaultRewardAllocation","inputs":[{"name":"rewardAllocation","type":"tuple","internalType":"struct IBeraChef_V0.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxNumWeightsPerRewardAllocation","inputs":[{"name":"_maxNumWeightsPerRewardAllocation","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setRewardAllocationBlockDelay","inputs":[{"name":"_rewardAllocationBlockDelay","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultWhitelistedStatus","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"isWhitelisted","type":"bool","internalType":"bool"},{"name":"metadata","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateWhitelistedVaultMetadata","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"metadata","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ActivateRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"startBlock","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"weights","type":"tuple[]","indexed":false,"internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"anonymous":false},{"type":"event","name":"MaxNumWeightsPerRewardAllocationSet","inputs":[{"name":"maxNumWeightsPerRewardAllocation","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"QueueRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"startBlock","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"weights","type":"tuple[]","indexed":false,"internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"anonymous":false},{"type":"event","name":"RewardAllocationBlockDelaySet","inputs":[{"name":"rewardAllocationBlockDelay","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"SetDefaultRewardAllocation","inputs":[{"name":"rewardAllocation","type":"tuple","indexed":false,"internalType":"struct IBeraChef_V0.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V0.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"anonymous":false},{"type":"event","name":"VaultWhitelistedStatusUpdated","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"isWhitelisted","type":"bool","indexed":true,"internalType":"bool"},{"name":"metadata","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"WhitelistedVaultMetadataUpdated","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"metadata","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"error","name":"AmountLessThanMinIncentiveRate","inputs":[]},{"type":"error","name":"CannotRecoverIncentiveToken","inputs":[]},{"type":"error","name":"CannotRecoverRewardToken","inputs":[]},{"type":"error","name":"CannotRecoverStakingToken","inputs":[]},{"type":"error","name":"CommissionChangeAlreadyQueued","inputs":[]},{"type":"error","name":"CommissionNotQueuedOrDelayNotPassed","inputs":[]},{"type":"error","name":"DepositNotMultipleOfGwei","inputs":[]},{"type":"error","name":"DepositValueTooHigh","inputs":[]},{"type":"error","name":"DonateAmountLessThanPayoutAmount","inputs":[]},{"type":"error","name":"IncentiveRateTooHigh","inputs":[]},{"type":"error","name":"IndexOutOfRange","inputs":[]},{"type":"error","name":"InsolventReward","inputs":[]},{"type":"error","name":"InsufficientDelegateStake","inputs":[]},{"type":"error","name":"InsufficientDeposit","inputs":[]},{"type":"error","name":"InsufficientIncentiveTokens","inputs":[]},{"type":"error","name":"InsufficientSelfStake","inputs":[]},{"type":"error","name":"InsufficientStake","inputs":[]},{"type":"error","name":"InvalidActivateBoostDelay","inputs":[]},{"type":"error","name":"InvalidArray","inputs":[]},{"type":"error","name":"InvalidBaseRate","inputs":[]},{"type":"error","name":"InvalidBoostMultiplier","inputs":[]},{"type":"error","name":"InvalidCommissionChangeDelay","inputs":[]},{"type":"error","name":"InvalidCommissionValue","inputs":[]},{"type":"error","name":"InvalidCredentialsLength","inputs":[]},{"type":"error","name":"InvalidDistribution","inputs":[]},{"type":"error","name":"InvalidDropBoostDelay","inputs":[]},{"type":"error","name":"InvalidIncentiveRate","inputs":[]},{"type":"error","name":"InvalidMaxIncentiveTokensCount","inputs":[]},{"type":"error","name":"InvalidMaxWeightPerVault","inputs":[]},{"type":"error","name":"InvalidMerkleRoot","inputs":[]},{"type":"error","name":"InvalidMinBoostedRewardRate","inputs":[]},{"type":"error","name":"InvalidProof","inputs":[]},{"type":"error","name":"InvalidPubKeyLength","inputs":[]},{"type":"error","name":"InvalidRewardAllocationWeights","inputs":[]},{"type":"error","name":"InvalidRewardClaimDelay","inputs":[]},{"type":"error","name":"InvalidRewardConvexity","inputs":[]},{"type":"error","name":"InvalidRewardRate","inputs":[]},{"type":"error","name":"InvalidSignatureLength","inputs":[]},{"type":"error","name":"InvalidStartBlock","inputs":[]},{"type":"error","name":"InvalidToken","inputs":[]},{"type":"error","name":"InvalidWeight","inputs":[]},{"type":"error","name":"InvalidateDefaultRewardAllocation","inputs":[]},{"type":"error","name":"InvariantCheckFailed","inputs":[]},{"type":"error","name":"MaxNumWeightsPerRewardAllocationIsZero","inputs":[]},{"type":"error","name":"MinIncentiveRateIsZero","inputs":[]},{"type":"error","name":"NotAContract","inputs":[]},{"type":"error","name":"NotApprovedSender","inputs":[]},{"type":"error","name":"NotBGT","inputs":[]},{"type":"error","name":"NotBlockRewardController","inputs":[]},{"type":"error","name":"NotDelegate","inputs":[]},{"type":"error","name":"NotDistributor","inputs":[]},{"type":"error","name":"NotEnoughBalance","inputs":[]},{"type":"error","name":"NotEnoughBoostedBalance","inputs":[]},{"type":"error","name":"NotEnoughTime","inputs":[]},{"type":"error","name":"NotFactoryVault","inputs":[]},{"type":"error","name":"NotFeeCollector","inputs":[]},{"type":"error","name":"NotIncentiveManager","inputs":[]},{"type":"error","name":"NotNewOperator","inputs":[]},{"type":"error","name":"NotOperator","inputs":[]},{"type":"error","name":"NotWhitelistedVault","inputs":[]},{"type":"error","name":"OperatorAlreadySet","inputs":[]},{"type":"error","name":"PayoutAmountIsZero","inputs":[]},{"type":"error","name":"RewardAllocationAlreadyQueued","inputs":[]},{"type":"error","name":"RewardAllocationBlockDelayTooLarge","inputs":[]},{"type":"error","name":"RewardCycleNotEnded","inputs":[]},{"type":"error","name":"RewardInactive","inputs":[]},{"type":"error","name":"RewardsDurationIsZero","inputs":[]},{"type":"error","name":"StakeAmountIsZero","inputs":[]},{"type":"error","name":"TimestampAlreadyProcessed","inputs":[]},{"type":"error","name":"TokenAlreadyWhitelistedOrLimitReached","inputs":[]},{"type":"error","name":"TokenNotWhitelisted","inputs":[]},{"type":"error","name":"TooManyWeights","inputs":[]},{"type":"error","name":"TotalSupplyOverflow","inputs":[]},{"type":"error","name":"WithdrawAmountIsZero","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroOperatorOnFirstDeposit","inputs":[]},{"type":"error","name":"ZeroPercentageWeight","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateReadyQueuedRewardAllocation(bytes)":"6ed0bf9a","getActiveRewardAllocation(bytes)":"da6f7563","getDefaultRewardAllocation()":"17dbf270","getQueuedRewardAllocation(bytes)":"4ecbf5c0","getSetActiveRewardAllocation(bytes)":"230288ce","isQueuedRewardAllocationReady(bytes,uint256)":"722f8e0a","isReady()":"a094a031","queueNewRewardAllocation(bytes,uint64,(address,uint96)[])":"e5eb90aa","setDefaultRewardAllocation((uint64,(address,uint96)[]))":"c89f2665","setMaxNumWeightsPerRewardAllocation(uint8)":"66204c78","setRewardAllocationBlockDelay(uint64)":"9ca2626c","setVaultWhitelistedStatus(address,bool,string)":"fb9f6fde","updateWhitelistedVaultMetadata(address,string)":"69ed1708"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AmountLessThanMinIncentiveRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRecoverIncentiveToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRecoverRewardToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRecoverStakingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommissionChangeAlreadyQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommissionNotQueuedOrDelayNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositNotMultipleOfGwei\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositValueTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DonateAmountLessThanPayoutAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncentiveRateTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsolventReward\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientDelegateStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientIncentiveTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSelfStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidActivateBoostDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBaseRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBoostMultiplier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommissionChangeDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommissionValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCredentialsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDropBoostDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIncentiveRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxIncentiveTokensCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxWeightPerVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinBoostedRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPubKeyLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardAllocationWeights\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardClaimDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardConvexity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStartBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidateDefaultRewardAllocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvariantCheckFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxNumWeightsPerRewardAllocationIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinIncentiveRateIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBGT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBlockRewardController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDistributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBoostedBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFactoryVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeCollector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotIncentiveManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNewOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistedVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayoutAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAllocationAlreadyQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAllocationBlockDelayTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardCycleNotEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardsDurationIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimestampAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyWhitelistedOrLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyWeights\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroOperatorOnFirstDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPercentageWeight\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"name\":\"ActivateRewardAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"maxNumWeightsPerRewardAllocation\",\"type\":\"uint8\"}],\"name\":\"MaxNumWeightsPerRewardAllocationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"name\":\"QueueRewardAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"rewardAllocationBlockDelay\",\"type\":\"uint64\"}],\"name\":\"RewardAllocationBlockDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IBeraChef_V0.RewardAllocation\",\"name\":\"rewardAllocation\",\"type\":\"tuple\"}],\"name\":\"SetDefaultRewardAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"VaultWhitelistedStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"WhitelistedVaultMetadataUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"activateReadyQueuedRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getActiveRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V0.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V0.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getQueuedRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V0.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getSetActiveRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V0.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"isQueuedRewardAllocationReady\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReady\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"name\":\"queueNewRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V0.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V0.RewardAllocation\",\"name\":\"rewardAllocation\",\"type\":\"tuple\"}],\"name\":\"setDefaultRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_maxNumWeightsPerRewardAllocation\",\"type\":\"uint8\"}],\"name\":\"setMaxNumWeightsPerRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_rewardAllocationBlockDelay\",\"type\":\"uint64\"}],\"name\":\"setRewardAllocationBlockDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"setVaultWhitelistedStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"updateWhitelistedVaultMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"DepositNotMultipleOfGwei()\":[{\"details\":\"Error thrown when the deposit amount is not a multiple of Gwei.\"}],\"DepositValueTooHigh()\":[{\"details\":\"Error thrown when the deposit amount is too high, since it is a uint64.\"}],\"InsufficientDeposit()\":[{\"details\":\"Error thrown when the deposit amount is too small, to prevent dust deposits.\"}],\"InvalidCredentialsLength()\":[{\"details\":\"Error thrown when the withdrawal credentials length is not 32 bytes.\"}],\"InvalidPubKeyLength()\":[{\"details\":\"Error thrown when the public key length is not 48 bytes.\"}],\"InvalidSignatureLength()\":[{\"details\":\"Error thrown when the signature length is not 96 bytes.\"}],\"NotNewOperator()\":[{\"details\":\"Error thrown when the caller is not the current operator.\"}],\"OperatorAlreadySet()\":[{\"details\":\"Error thrown when the operator is already set and caller passed non-zero operator.\"}],\"ZeroOperatorOnFirstDeposit()\":[{\"details\":\"Error thrown when the input operator is zero address on the first deposit.\"}]},\"events\":{\"ActivateRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"params\":{\"startBlock\":\"The block that the reward allocation goes into effect.\",\"valPubkey\":\"The validator's pubkey.\",\"weights\":\"The weights of the reward allocation.\"}},\"MaxNumWeightsPerRewardAllocationSet(uint8)\":{\"params\":{\"maxNumWeightsPerRewardAllocation\":\"The maximum number of weights per reward allocation.\"}},\"QueueRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"params\":{\"startBlock\":\"The block that the reward allocation goes into effect.\",\"valPubkey\":\"The validator's pubkey.\",\"weights\":\"The weights of the reward allocation.\"}},\"RewardAllocationBlockDelaySet(uint64)\":{\"params\":{\"rewardAllocationBlockDelay\":\"The delay in blocks before a new reward allocation can go into effect.\"}},\"SetDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"params\":{\"rewardAllocation\":\"The default reward allocation.\"}},\"VaultWhitelistedStatusUpdated(address,bool,string)\":{\"params\":{\"isWhitelisted\":\"The whitelist status; true if the receiver is being whitelisted, false otherwise.\",\"metadata\":\"The metadata of the vault.\",\"receiver\":\"The address to remove or add as whitelisted vault.\"}},\"WhitelistedVaultMetadataUpdated(address,string)\":{\"params\":{\"metadata\":\"The metadata of the vault.\",\"receiver\":\"The address of the whitelisted vault.\"}}},\"kind\":\"dev\",\"methods\":{\"activateReadyQueuedRewardAllocation(bytes)\":{\"details\":\"Should be called by the distribution contract.\",\"params\":{\"valPubkey\":\"The validator's pubkey.\"}},\"getActiveRewardAllocation(bytes)\":{\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"rewardAllocation The active reward allocation.\"}},\"getDefaultRewardAllocation()\":{\"returns\":{\"_0\":\"rewardAllocation The default reward allocation.\"}},\"getQueuedRewardAllocation(bytes)\":{\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"rewardAllocation The queued reward allocation.\"}},\"getSetActiveRewardAllocation(bytes)\":{\"details\":\"This will return active reward allocation set by validators even if its not valid.\",\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"rewardAllocation The reward allocation.\"}},\"isQueuedRewardAllocationReady(bytes,uint256)\":{\"params\":{\"blockNumber\":\"The block number to be queried.\",\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"isReady True if the queued reward allocation is ready to be activated, false otherwise.\"}},\"isReady()\":{\"details\":\"This function should be used by all contracts that depend on a system call.This will return false if the governance module has not set a default reward allocation yet.\",\"returns\":{\"_0\":\"isReady True if the BeraChef is ready to be used, false otherwise.\"}},\"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"details\":\"The weights of the reward allocation must add up to 100% or 1e4. Only whitelisted pools may be used as well.\",\"params\":{\"startBlock\":\"The block that the reward allocation goes into effect.\",\"valPubkey\":\"The validator's pubkey.\",\"weights\":\"The weights of the reward allocation.\"}},\"setDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"details\":\"The caller of this function must be the governance module account.\",\"params\":{\"rewardAllocation\":\"The default reward allocation.\"}},\"setVaultWhitelistedStatus(address,bool,string)\":{\"params\":{\"isWhitelisted\":\"The whitelist status; true if the receiver is being whitelisted, false otherwise.\",\"metadata\":\"The metadata of the vault.\",\"receiver\":\"The address to remove or add as whitelisted vault.\"}},\"updateWhitelistedVaultMetadata(address,string)\":{\"params\":{\"metadata\":\"The metadata of the vault, to associate info with the vault in the events log.\",\"receiver\":\"The address of the whitelisted vault.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ActivateRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Emitted when a new reward allocation has been activated.\"},\"MaxNumWeightsPerRewardAllocationSet(uint8)\":{\"notice\":\"Emitted when the maximum number of weights per reward allocation has been set.\"},\"QueueRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Emitted when a new reward allocation has been queued.\"},\"RewardAllocationBlockDelaySet(uint64)\":{\"notice\":\"Emitted when the delay in blocks before a new reward allocation can go into effect has been set.\"},\"SetDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"notice\":\"Emitted when the governance module has set a new default reward allocation.\"},\"VaultWhitelistedStatusUpdated(address,bool,string)\":{\"notice\":\"Emitted when the vault's whitelisted status have been updated.\"},\"WhitelistedVaultMetadataUpdated(address,string)\":{\"notice\":\"Emitted when the metadata of a whitelisted vault has been updated.\"}},\"kind\":\"user\",\"methods\":{\"activateReadyQueuedRewardAllocation(bytes)\":{\"notice\":\"Activates the queued reward allocation for a validator if its ready for the current block.\"},\"getActiveRewardAllocation(bytes)\":{\"notice\":\"Returns the active reward allocation for validator with given pubkey\"},\"getDefaultRewardAllocation()\":{\"notice\":\"Returns the default reward allocation for validators that do not have a reward allocation.\"},\"getQueuedRewardAllocation(bytes)\":{\"notice\":\"Returns the queued reward allocation for a validator with given pubkey\"},\"getSetActiveRewardAllocation(bytes)\":{\"notice\":\"Returns the active reward allocation set by the validator with given pubkey.\"},\"isQueuedRewardAllocationReady(bytes,uint256)\":{\"notice\":\"Returns the status of whether a queued reward allocation is ready to be activated.\"},\"isReady()\":{\"notice\":\"Returns the status of whether the BeraChef contract is ready to be used.\"},\"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Add a new reward allocation to the queue for validator with given pubkey. Does not allow overwriting of existing queued reward allocation.\"},\"setDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"notice\":\"Sets the default reward allocation for validators that do not have a reward allocation.\"},\"setMaxNumWeightsPerRewardAllocation(uint8)\":{\"notice\":\"Sets the maximum number of weights per reward allocation.\"},\"setRewardAllocationBlockDelay(uint64)\":{\"notice\":\"Sets the delay in blocks before a new reward allocation can be queued.\"},\"setVaultWhitelistedStatus(address,bool,string)\":{\"notice\":\"Updates the vault's whitelisted statusThe caller of this function must be the governance module account.\"},\"updateWhitelistedVaultMetadata(address,string)\":{\"notice\":\"Updates the metadata of a whitelisted vault, reverts if vault is not whitelisted.The caller of this function must be the governance module account.\"}},\"notice\":\"Interface of the BeraChef module\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0_Contracts/interfaces/IBeraChef_V0.sol\":\"IBeraChef_V0\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@mock/=test/mock/\",\":@openzeppelin-gov-ext/=node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/\",\":@openzeppelin-gov/=node_modules/@openzeppelin/contracts-upgradeable/governance/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@pythnetwork/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solady/src/=lib/solady/src/\",\":solady/test/=lib/solady/test/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":transient-goodies/=lib/transient-goodies/src/\"]},\"sources\":{\"src/base/IStakingRewardsErrors.sol\":{\"keccak256\":\"0xa288fc43d5339a6cb74d707024c83515583bbc9464dc3acf925d83bf2734ee0d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cf55cebb3acd6f33a10b460b070a8681902028594e7cdda99dbe03ac868ebf5b\",\"dweb:/ipfs/QmRC3qu3NyR3u647m7gQ2VcAz9xAbAnWoDmHbVEHJuov8d\"]},\"src/pol/interfaces/IPOLErrors.sol\":{\"keccak256\":\"0xf6c1c487b083b802d10a83198b04d056bf9fb596ad498bd50fe6373aa49eaa34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://910b3e2572f90707b1682c2bde50c28b03e4f7d72ec2b4bae5e0c62bea81ceb9\",\"dweb:/ipfs/QmY4ZdRVK8cYRjkRJVAaEUkGhmzU2SriMQk9JeLTHbBg1A\"]},\"src/v0_Contracts/interfaces/IBeraChef_V0.sol\":{\"keccak256\":\"0x0fc2ad1bae519b515c107bd1337f2ef57229268ec38e55daec47cb9876ef5566\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6fc0093d7c4638594adc74057096cea3aade7930a8039f17791e9d399118ca41\",\"dweb:/ipfs/QmR6aspBXpoSZwqP1zp5y9PSvdXZyndLf9mdsDEc7V2BFr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AmountLessThanMinIncentiveRate"},{"inputs":[],"type":"error","name":"CannotRecoverIncentiveToken"},{"inputs":[],"type":"error","name":"CannotRecoverRewardToken"},{"inputs":[],"type":"error","name":"CannotRecoverStakingToken"},{"inputs":[],"type":"error","name":"CommissionChangeAlreadyQueued"},{"inputs":[],"type":"error","name":"CommissionNotQueuedOrDelayNotPassed"},{"inputs":[],"type":"error","name":"DepositNotMultipleOfGwei"},{"inputs":[],"type":"error","name":"DepositValueTooHigh"},{"inputs":[],"type":"error","name":"DonateAmountLessThanPayoutAmount"},{"inputs":[],"type":"error","name":"IncentiveRateTooHigh"},{"inputs":[],"type":"error","name":"IndexOutOfRange"},{"inputs":[],"type":"error","name":"InsolventReward"},{"inputs":[],"type":"error","name":"InsufficientDelegateStake"},{"inputs":[],"type":"error","name":"InsufficientDeposit"},{"inputs":[],"type":"error","name":"InsufficientIncentiveTokens"},{"inputs":[],"type":"error","name":"InsufficientSelfStake"},{"inputs":[],"type":"error","name":"InsufficientStake"},{"inputs":[],"type":"error","name":"InvalidActivateBoostDelay"},{"inputs":[],"type":"error","name":"InvalidArray"},{"inputs":[],"type":"error","name":"InvalidBaseRate"},{"inputs":[],"type":"error","name":"InvalidBoostMultiplier"},{"inputs":[],"type":"error","name":"InvalidCommissionChangeDelay"},{"inputs":[],"type":"error","name":"InvalidCommissionValue"},{"inputs":[],"type":"error","name":"InvalidCredentialsLength"},{"inputs":[],"type":"error","name":"InvalidDistribution"},{"inputs":[],"type":"error","name":"InvalidDropBoostDelay"},{"inputs":[],"type":"error","name":"InvalidIncentiveRate"},{"inputs":[],"type":"error","name":"InvalidMaxIncentiveTokensCount"},{"inputs":[],"type":"error","name":"InvalidMaxWeightPerVault"},{"inputs":[],"type":"error","name":"InvalidMerkleRoot"},{"inputs":[],"type":"error","name":"InvalidMinBoostedRewardRate"},{"inputs":[],"type":"error","name":"InvalidProof"},{"inputs":[],"type":"error","name":"InvalidPubKeyLength"},{"inputs":[],"type":"error","name":"InvalidRewardAllocationWeights"},{"inputs":[],"type":"error","name":"InvalidRewardClaimDelay"},{"inputs":[],"type":"error","name":"InvalidRewardConvexity"},{"inputs":[],"type":"error","name":"InvalidRewardRate"},{"inputs":[],"type":"error","name":"InvalidSignatureLength"},{"inputs":[],"type":"error","name":"InvalidStartBlock"},{"inputs":[],"type":"error","name":"InvalidToken"},{"inputs":[],"type":"error","name":"InvalidWeight"},{"inputs":[],"type":"error","name":"InvalidateDefaultRewardAllocation"},{"inputs":[],"type":"error","name":"InvariantCheckFailed"},{"inputs":[],"type":"error","name":"MaxNumWeightsPerRewardAllocationIsZero"},{"inputs":[],"type":"error","name":"MinIncentiveRateIsZero"},{"inputs":[],"type":"error","name":"NotAContract"},{"inputs":[],"type":"error","name":"NotApprovedSender"},{"inputs":[],"type":"error","name":"NotBGT"},{"inputs":[],"type":"error","name":"NotBlockRewardController"},{"inputs":[],"type":"error","name":"NotDelegate"},{"inputs":[],"type":"error","name":"NotDistributor"},{"inputs":[],"type":"error","name":"NotEnoughBalance"},{"inputs":[],"type":"error","name":"NotEnoughBoostedBalance"},{"inputs":[],"type":"error","name":"NotEnoughTime"},{"inputs":[],"type":"error","name":"NotFactoryVault"},{"inputs":[],"type":"error","name":"NotFeeCollector"},{"inputs":[],"type":"error","name":"NotIncentiveManager"},{"inputs":[],"type":"error","name":"NotNewOperator"},{"inputs":[],"type":"error","name":"NotOperator"},{"inputs":[],"type":"error","name":"NotWhitelistedVault"},{"inputs":[],"type":"error","name":"OperatorAlreadySet"},{"inputs":[],"type":"error","name":"PayoutAmountIsZero"},{"inputs":[],"type":"error","name":"RewardAllocationAlreadyQueued"},{"inputs":[],"type":"error","name":"RewardAllocationBlockDelayTooLarge"},{"inputs":[],"type":"error","name":"RewardCycleNotEnded"},{"inputs":[],"type":"error","name":"RewardInactive"},{"inputs":[],"type":"error","name":"RewardsDurationIsZero"},{"inputs":[],"type":"error","name":"StakeAmountIsZero"},{"inputs":[],"type":"error","name":"TimestampAlreadyProcessed"},{"inputs":[],"type":"error","name":"TokenAlreadyWhitelistedOrLimitReached"},{"inputs":[],"type":"error","name":"TokenNotWhitelisted"},{"inputs":[],"type":"error","name":"TooManyWeights"},{"inputs":[],"type":"error","name":"TotalSupplyOverflow"},{"inputs":[],"type":"error","name":"WithdrawAmountIsZero"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroOperatorOnFirstDeposit"},{"inputs":[],"type":"error","name":"ZeroPercentageWeight"},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes","indexed":true},{"internalType":"uint64","name":"startBlock","type":"uint64","indexed":false},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}],"indexed":false}],"type":"event","name":"ActivateRewardAllocation","anonymous":false},{"inputs":[{"internalType":"uint8","name":"maxNumWeightsPerRewardAllocation","type":"uint8","indexed":false}],"type":"event","name":"MaxNumWeightsPerRewardAllocationSet","anonymous":false},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes","indexed":true},{"internalType":"uint64","name":"startBlock","type":"uint64","indexed":false},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}],"indexed":false}],"type":"event","name":"QueueRewardAllocation","anonymous":false},{"inputs":[{"internalType":"uint64","name":"rewardAllocationBlockDelay","type":"uint64","indexed":false}],"type":"event","name":"RewardAllocationBlockDelaySet","anonymous":false},{"inputs":[{"internalType":"struct IBeraChef_V0.RewardAllocation","name":"rewardAllocation","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}],"indexed":false}],"type":"event","name":"SetDefaultRewardAllocation","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"bool","name":"isWhitelisted","type":"bool","indexed":true},{"internalType":"string","name":"metadata","type":"string","indexed":false}],"type":"event","name":"VaultWhitelistedStatusUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"string","name":"metadata","type":"string","indexed":false}],"type":"event","name":"WhitelistedVaultMetadataUpdated","anonymous":false},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"activateReadyQueuedRewardAllocation"},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getActiveRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V0.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDefaultRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V0.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getQueuedRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V0.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getSetActiveRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V0.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"isQueuedRewardAllocationReady","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isReady","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"},{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"queueNewRewardAllocation"},{"inputs":[{"internalType":"struct IBeraChef_V0.RewardAllocation","name":"rewardAllocation","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V0.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}],"stateMutability":"nonpayable","type":"function","name":"setDefaultRewardAllocation"},{"inputs":[{"internalType":"uint8","name":"_maxNumWeightsPerRewardAllocation","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setMaxNumWeightsPerRewardAllocation"},{"inputs":[{"internalType":"uint64","name":"_rewardAllocationBlockDelay","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setRewardAllocationBlockDelay"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bool","name":"isWhitelisted","type":"bool"},{"internalType":"string","name":"metadata","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setVaultWhitelistedStatus"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"string","name":"metadata","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateWhitelistedVaultMetadata"}],"devdoc":{"kind":"dev","methods":{"activateReadyQueuedRewardAllocation(bytes)":{"details":"Should be called by the distribution contract.","params":{"valPubkey":"The validator's pubkey."}},"getActiveRewardAllocation(bytes)":{"params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"rewardAllocation The active reward allocation."}},"getDefaultRewardAllocation()":{"returns":{"_0":"rewardAllocation The default reward allocation."}},"getQueuedRewardAllocation(bytes)":{"params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"rewardAllocation The queued reward allocation."}},"getSetActiveRewardAllocation(bytes)":{"details":"This will return active reward allocation set by validators even if its not valid.","params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"rewardAllocation The reward allocation."}},"isQueuedRewardAllocationReady(bytes,uint256)":{"params":{"blockNumber":"The block number to be queried.","valPubkey":"The validator's pubkey."},"returns":{"_0":"isReady True if the queued reward allocation is ready to be activated, false otherwise."}},"isReady()":{"details":"This function should be used by all contracts that depend on a system call.This will return false if the governance module has not set a default reward allocation yet.","returns":{"_0":"isReady True if the BeraChef is ready to be used, false otherwise."}},"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])":{"details":"The weights of the reward allocation must add up to 100% or 1e4. Only whitelisted pools may be used as well.","params":{"startBlock":"The block that the reward allocation goes into effect.","valPubkey":"The validator's pubkey.","weights":"The weights of the reward allocation."}},"setDefaultRewardAllocation((uint64,(address,uint96)[]))":{"details":"The caller of this function must be the governance module account.","params":{"rewardAllocation":"The default reward allocation."}},"setVaultWhitelistedStatus(address,bool,string)":{"params":{"isWhitelisted":"The whitelist status; true if the receiver is being whitelisted, false otherwise.","metadata":"The metadata of the vault.","receiver":"The address to remove or add as whitelisted vault."}},"updateWhitelistedVaultMetadata(address,string)":{"params":{"metadata":"The metadata of the vault, to associate info with the vault in the events log.","receiver":"The address of the whitelisted vault."}}},"version":1},"userdoc":{"kind":"user","methods":{"activateReadyQueuedRewardAllocation(bytes)":{"notice":"Activates the queued reward allocation for a validator if its ready for the current block."},"getActiveRewardAllocation(bytes)":{"notice":"Returns the active reward allocation for validator with given pubkey"},"getDefaultRewardAllocation()":{"notice":"Returns the default reward allocation for validators that do not have a reward allocation."},"getQueuedRewardAllocation(bytes)":{"notice":"Returns the queued reward allocation for a validator with given pubkey"},"getSetActiveRewardAllocation(bytes)":{"notice":"Returns the active reward allocation set by the validator with given pubkey."},"isQueuedRewardAllocationReady(bytes,uint256)":{"notice":"Returns the status of whether a queued reward allocation is ready to be activated."},"isReady()":{"notice":"Returns the status of whether the BeraChef contract is ready to be used."},"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])":{"notice":"Add a new reward allocation to the queue for validator with given pubkey. Does not allow overwriting of existing queued reward allocation."},"setDefaultRewardAllocation((uint64,(address,uint96)[]))":{"notice":"Sets the default reward allocation for validators that do not have a reward allocation."},"setMaxNumWeightsPerRewardAllocation(uint8)":{"notice":"Sets the maximum number of weights per reward allocation."},"setRewardAllocationBlockDelay(uint64)":{"notice":"Sets the delay in blocks before a new reward allocation can be queued."},"setVaultWhitelistedStatus(address,bool,string)":{"notice":"Updates the vault's whitelisted statusThe caller of this function must be the governance module account."},"updateWhitelistedVaultMetadata(address,string)":{"notice":"Updates the metadata of a whitelisted vault, reverts if vault is not whitelisted.The caller of this function must be the governance module account."}},"version":1}},"settings":{"remappings":["@mock/=test/mock/","@openzeppelin-gov-ext/=node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/","@openzeppelin-gov/=node_modules/@openzeppelin/contracts-upgradeable/governance/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@prb/math/=node_modules/@prb/math/","@pythnetwork/=node_modules/@pythnetwork/pyth-sdk-solidity/","ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solady/src/=lib/solady/src/","solady/test/=lib/solady/test/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","transient-goodies/=lib/transient-goodies/src/"],"optimizer":{"enabled":true,"runs":4294967295},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/v0_Contracts/interfaces/IBeraChef_V0.sol":"IBeraChef_V0"},"evmVersion":"cancun","libraries":{}},"sources":{"src/base/IStakingRewardsErrors.sol":{"keccak256":"0xa288fc43d5339a6cb74d707024c83515583bbc9464dc3acf925d83bf2734ee0d","urls":["bzz-raw://cf55cebb3acd6f33a10b460b070a8681902028594e7cdda99dbe03ac868ebf5b","dweb:/ipfs/QmRC3qu3NyR3u647m7gQ2VcAz9xAbAnWoDmHbVEHJuov8d"],"license":"BUSL-1.1"},"src/pol/interfaces/IPOLErrors.sol":{"keccak256":"0xf6c1c487b083b802d10a83198b04d056bf9fb596ad498bd50fe6373aa49eaa34","urls":["bzz-raw://910b3e2572f90707b1682c2bde50c28b03e4f7d72ec2b4bae5e0c62bea81ceb9","dweb:/ipfs/QmY4ZdRVK8cYRjkRJVAaEUkGhmzU2SriMQk9JeLTHbBg1A"],"license":"BUSL-1.1"},"src/v0_Contracts/interfaces/IBeraChef_V0.sol":{"keccak256":"0x0fc2ad1bae519b515c107bd1337f2ef57229268ec38e55daec47cb9876ef5566","urls":["bzz-raw://6fc0093d7c4638594adc74057096cea3aade7930a8039f17791e9d399118ca41","dweb:/ipfs/QmR6aspBXpoSZwqP1zp5y9PSvdXZyndLf9mdsDEc7V2BFr"],"license":"BUSL-1.1"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/v0_Contracts/interfaces/IBeraChef_V0.sol","id":92321,"exportedSymbols":{"IBeraChef_V0":[92320],"IPOLErrors":[81420]},"nodeType":"SourceUnit","src":"37:9516:162","nodes":[{"id":92141,"nodeType":"PragmaDirective","src":"37:24:162","nodes":[],"literals":["solidity","^","0.8",".26"]},{"id":92143,"nodeType":"ImportDirective","src":"63:65:162","nodes":[],"absolutePath":"src/pol/interfaces/IPOLErrors.sol","file":"../../pol/interfaces/IPOLErrors.sol","nameLocation":"-1:-1:-1","scope":92321,"sourceUnit":81421,"symbolAliases":[{"foreign":{"id":92142,"name":"IPOLErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81420,"src":"72:10:162","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":92320,"nodeType":"ContractDefinition","src":"175:9377:162","nodes":[{"id":92154,"nodeType":"StructDefinition","src":"553:195:162","nodes":[],"canonicalName":"IBeraChef_V0.RewardAllocation","documentation":{"id":92147,"nodeType":"StructuredDocumentation","src":"501:47:162","text":"@notice Represents a RewardAllocation entry"},"members":[{"constant":false,"id":92149,"mutability":"mutable","name":"startBlock","nameLocation":"656:10:162","nodeType":"VariableDeclaration","scope":92154,"src":"649:17:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92148,"name":"uint64","nodeType":"ElementaryTypeName","src":"649:6:162","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":92153,"mutability":"mutable","name":"weights","nameLocation":"734:7:162","nodeType":"VariableDeclaration","scope":92154,"src":"725:16:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V0.Weight[]"},"typeName":{"baseType":{"id":92151,"nodeType":"UserDefinedTypeName","pathNode":{"id":92150,"name":"Weight","nameLocations":["725:6:162"],"nodeType":"IdentifierPath","referencedDeclaration":92160,"src":"725:6:162"},"referencedDeclaration":92160,"src":"725:6:162","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$92160_storage_ptr","typeString":"struct IBeraChef_V0.Weight"}},"id":92152,"nodeType":"ArrayTypeName","src":"725:8:162","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V0.Weight[]"}},"visibility":"internal"}],"name":"RewardAllocation","nameLocation":"560:16:162","scope":92320,"visibility":"public"},{"id":92160,"nodeType":"StructDefinition","src":"796:433:162","nodes":[],"canonicalName":"IBeraChef_V0.Weight","documentation":{"id":92155,"nodeType":"StructuredDocumentation","src":"754:37:162","text":"@notice Represents a Weight entry"},"members":[{"constant":false,"id":92157,"mutability":"mutable","name":"receiver","nameLocation":"892:8:162","nodeType":"VariableDeclaration","scope":92160,"src":"884:16:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92156,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:162","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92159,"mutability":"mutable","name":"percentageNumerator","nameLocation":"1203:19:162","nodeType":"VariableDeclaration","scope":92160,"src":"1196:26:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":92158,"name":"uint96","nodeType":"ElementaryTypeName","src":"1196:6:162","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Weight","nameLocation":"803:6:162","scope":92320,"visibility":"public"},{"id":92165,"nodeType":"EventDefinition","src":"1714:82:162","nodes":[],"anonymous":false,"documentation":{"id":92161,"nodeType":"StructuredDocumentation","src":"1518:191:162","text":"@notice Emitted when the maximum number of weights per reward allocation has been set.\n @param maxNumWeightsPerRewardAllocation The maximum number of weights per reward allocation."},"eventSelector":"1f427f3160f84ab8033ba8e3550b2a3f178241305e86660a221c0dc52f3bc9ae","name":"MaxNumWeightsPerRewardAllocationSet","nameLocation":"1720:35:162","parameters":{"id":92164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92163,"indexed":false,"mutability":"mutable","name":"maxNumWeightsPerRewardAllocation","nameLocation":"1762:32:162","nodeType":"VariableDeclaration","scope":92165,"src":"1756:38:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":92162,"name":"uint8","nodeType":"ElementaryTypeName","src":"1756:5:162","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1755:40:162"}},{"id":92170,"nodeType":"EventDefinition","src":"2028:71:162","nodes":[],"anonymous":false,"documentation":{"id":92166,"nodeType":"StructuredDocumentation","src":"1802:221:162","text":"@notice Emitted when the delay in blocks before a new reward allocation can go into effect has been set.\n @param rewardAllocationBlockDelay The delay in blocks before a new reward allocation can go into effect."},"eventSelector":"d30a76f5419042e46e49eaf91b6a0f0feaaa673b6db586a63d3e8e79d4bf2081","name":"RewardAllocationBlockDelaySet","nameLocation":"2034:29:162","parameters":{"id":92169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92168,"indexed":false,"mutability":"mutable","name":"rewardAllocationBlockDelay","nameLocation":"2071:26:162","nodeType":"VariableDeclaration","scope":92170,"src":"2064:33:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92167,"name":"uint64","nodeType":"ElementaryTypeName","src":"2064:6:162","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2063:35:162"}},{"id":92179,"nodeType":"EventDefinition","src":"2421:107:162","nodes":[],"anonymous":false,"documentation":{"id":92171,"nodeType":"StructuredDocumentation","src":"2105:311:162","text":"@notice Emitted when the vault's whitelisted status have been updated.\n @param receiver The address to remove or add as whitelisted vault.\n @param isWhitelisted The whitelist status; true if the receiver is being whitelisted, false otherwise.\n @param metadata The metadata of the vault."},"eventSelector":"ad865159180d43e1aedae6624a0e9e20d86e07afb82a96f8f9a8b2f3294e16c0","name":"VaultWhitelistedStatusUpdated","nameLocation":"2427:29:162","parameters":{"id":92178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92173,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"2473:8:162","nodeType":"VariableDeclaration","scope":92179,"src":"2457:24:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92172,"name":"address","nodeType":"ElementaryTypeName","src":"2457:7:162","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92175,"indexed":true,"mutability":"mutable","name":"isWhitelisted","nameLocation":"2496:13:162","nodeType":"VariableDeclaration","scope":92179,"src":"2483:26:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92174,"name":"bool","nodeType":"ElementaryTypeName","src":"2483:4:162","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":92177,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"2518:8:162","nodeType":"VariableDeclaration","scope":92179,"src":"2511:15:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":92176,"name":"string","nodeType":"ElementaryTypeName","src":"2511:6:162","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2456:71:162"}},{"id":92186,"nodeType":"EventDefinition","src":"2743:81:162","nodes":[],"anonymous":false,"documentation":{"id":92180,"nodeType":"StructuredDocumentation","src":"2534:204:162","text":" @notice Emitted when the metadata of a whitelisted vault has been updated.\n @param receiver The address of the whitelisted vault.\n @param metadata The metadata of the vault."},"eventSelector":"b10c3a0623fdc435deba8729692b1a7c6c1886b7466c8cffa3ccdb42042ffbc5","name":"WhitelistedVaultMetadataUpdated","nameLocation":"2749:31:162","parameters":{"id":92185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92182,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"2797:8:162","nodeType":"VariableDeclaration","scope":92186,"src":"2781:24:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92181,"name":"address","nodeType":"ElementaryTypeName","src":"2781:7:162","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92184,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"2814:8:162","nodeType":"VariableDeclaration","scope":92186,"src":"2807:15:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":92183,"name":"string","nodeType":"ElementaryTypeName","src":"2807:6:162","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2780:43:162"}},{"id":92197,"nodeType":"EventDefinition","src":"3103:90:162","nodes":[],"anonymous":false,"documentation":{"id":92187,"nodeType":"StructuredDocumentation","src":"2830:268:162","text":" @notice Emitted when a new reward allocation has been queued.\n @param valPubkey The validator's pubkey.\n @param startBlock The block that the reward allocation goes into effect.\n @param weights The weights of the reward allocation."},"eventSelector":"22fe555512d9a04d20e3735ac5fe7a73227c2c6398f1453a5d60ce7aaf5de2ae","name":"QueueRewardAllocation","nameLocation":"3109:21:162","parameters":{"id":92196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92189,"indexed":true,"mutability":"mutable","name":"valPubkey","nameLocation":"3145:9:162","nodeType":"VariableDeclaration","scope":92197,"src":"3131:23:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":92188,"name":"bytes","nodeType":"ElementaryTypeName","src":"3131:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":92191,"indexed":false,"mutability":"mutable","name":"startBlock","nameLocation":"3163:10:162","nodeType":"VariableDeclaration","scope":92197,"src":"3156:17:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92190,"name":"uint64","nodeType":"ElementaryTypeName","src":"3156:6:162","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":92195,"indexed":false,"mutability":"mutable","name":"weights","nameLocation":"3184:7:162","nodeType":"VariableDeclaration","scope":92197,"src":"3175:16:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_memory_ptr_$dyn_memory_ptr","typeString":"struct IBeraChef_V0.Weight[]"},"typeName":{"baseType":{"id":92193,"nodeType":"UserDefinedTypeName","pathNode":{"id":92192,"name":"Weight","nameLocations":["3175:6:162"],"nodeType":"IdentifierPath","referencedDeclaration":92160,"src":"3175:6:162"},"referencedDeclaration":92160,"src":"3175:6:162","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$92160_storage_ptr","typeString":"struct IBeraChef_V0.Weight"}},"id":92194,"nodeType":"ArrayTypeName","src":"3175:8:162","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V0.Weight[]"}},"visibility":"internal"}],"src":"3130:62:162"}},{"id":92208,"nodeType":"EventDefinition","src":"3475:93:162","nodes":[],"anonymous":false,"documentation":{"id":92198,"nodeType":"StructuredDocumentation","src":"3199:271:162","text":" @notice Emitted when a new reward allocation has been activated.\n @param valPubkey The validator's pubkey.\n @param startBlock The block that the reward allocation goes into effect.\n @param weights The weights of the reward allocation."},"eventSelector":"09fed3850dff4fef07a5284847da937f94021882ecab1c143fcacd69e5451bd8","name":"ActivateRewardAllocation","nameLocation":"3481:24:162","parameters":{"id":92207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92200,"indexed":true,"mutability":"mutable","name":"valPubkey","nameLocation":"3520:9:162","nodeType":"VariableDeclaration","scope":92208,"src":"3506:23:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":92199,"name":"bytes","nodeType":"ElementaryTypeName","src":"3506:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":92202,"indexed":false,"mutability":"mutable","name":"startBlock","nameLocation":"3538:10:162","nodeType":"VariableDeclaration","scope":92208,"src":"3531:17:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92201,"name":"uint64","nodeType":"ElementaryTypeName","src":"3531:6:162","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":92206,"indexed":false,"mutability":"mutable","name":"weights","nameLocation":"3559:7:162","nodeType":"VariableDeclaration","scope":92208,"src":"3550:16:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_memory_ptr_$dyn_memory_ptr","typeString":"struct IBeraChef_V0.Weight[]"},"typeName":{"baseType":{"id":92204,"nodeType":"UserDefinedTypeName","pathNode":{"id":92203,"name":"Weight","nameLocations":["3550:6:162"],"nodeType":"IdentifierPath","referencedDeclaration":92160,"src":"3550:6:162"},"referencedDeclaration":92160,"src":"3550:6:162","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$92160_storage_ptr","typeString":"struct IBeraChef_V0.Weight"}},"id":92205,"nodeType":"ArrayTypeName","src":"3550:8:162","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V0.Weight[]"}},"visibility":"internal"}],"src":"3505:62:162"}},{"id":92214,"nodeType":"EventDefinition","src":"3743:68:162","nodes":[],"anonymous":false,"documentation":{"id":92209,"nodeType":"StructuredDocumentation","src":"3574:164:162","text":" @notice Emitted when the governance module has set a new default reward allocation.\n @param rewardAllocation The default reward allocation."},"eventSelector":"63a1be039047941d4150a7feb1920b5fadcbf022e1a21334fba542a52eabdaf7","name":"SetDefaultRewardAllocation","nameLocation":"3749:26:162","parameters":{"id":92213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92212,"indexed":false,"mutability":"mutable","name":"rewardAllocation","nameLocation":"3793:16:162","nodeType":"VariableDeclaration","scope":92214,"src":"3776:33:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_memory_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"},"typeName":{"id":92211,"nodeType":"UserDefinedTypeName","pathNode":{"id":92210,"name":"RewardAllocation","nameLocations":["3776:16:162"],"nodeType":"IdentifierPath","referencedDeclaration":92154,"src":"3776:16:162"},"referencedDeclaration":92154,"src":"3776:16:162","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_storage_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"}},"visibility":"internal"}],"src":"3775:35:162"}},{"id":92223,"nodeType":"FunctionDefinition","src":"4310:109:162","nodes":[],"documentation":{"id":92215,"nodeType":"StructuredDocumentation","src":"4100:205:162","text":" @notice Returns the active reward allocation for validator with given pubkey\n @param valPubkey The validator's pubkey.\n @return rewardAllocation The active reward allocation."},"functionSelector":"da6f7563","implemented":false,"kind":"function","modifiers":[],"name":"getActiveRewardAllocation","nameLocation":"4319:25:162","parameters":{"id":92218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92217,"mutability":"mutable","name":"valPubkey","nameLocation":"4360:9:162","nodeType":"VariableDeclaration","scope":92223,"src":"4345:24:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":92216,"name":"bytes","nodeType":"ElementaryTypeName","src":"4345:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4344:26:162"},"returnParameters":{"id":92222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92223,"src":"4394:23:162","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_memory_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"},"typeName":{"id":92220,"nodeType":"UserDefinedTypeName","pathNode":{"id":92219,"name":"RewardAllocation","nameLocations":["4394:16:162"],"nodeType":"IdentifierPath","referencedDeclaration":92154,"src":"4394:16:162"},"referencedDeclaration":92154,"src":"4394:16:162","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_storage_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"}},"visibility":"internal"}],"src":"4393:25:162"},"scope":92320,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":92232,"nodeType":"FunctionDefinition","src":"4637:109:162","nodes":[],"documentation":{"id":92224,"nodeType":"StructuredDocumentation","src":"4425:207:162","text":" @notice Returns the queued reward allocation for a validator with given pubkey\n @param valPubkey The validator's pubkey.\n @return rewardAllocation The queued reward allocation."},"functionSelector":"4ecbf5c0","implemented":false,"kind":"function","modifiers":[],"name":"getQueuedRewardAllocation","nameLocation":"4646:25:162","parameters":{"id":92227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92226,"mutability":"mutable","name":"valPubkey","nameLocation":"4687:9:162","nodeType":"VariableDeclaration","scope":92232,"src":"4672:24:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":92225,"name":"bytes","nodeType":"ElementaryTypeName","src":"4672:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4671:26:162"},"returnParameters":{"id":92231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92232,"src":"4721:23:162","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_memory_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"},"typeName":{"id":92229,"nodeType":"UserDefinedTypeName","pathNode":{"id":92228,"name":"RewardAllocation","nameLocations":["4721:16:162"],"nodeType":"IdentifierPath","referencedDeclaration":92154,"src":"4721:16:162"},"referencedDeclaration":92154,"src":"4721:16:162","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_storage_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"}},"visibility":"internal"}],"src":"4720:25:162"},"scope":92320,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":92241,"nodeType":"FunctionDefinition","src":"5058:112:162","nodes":[],"documentation":{"id":92233,"nodeType":"StructuredDocumentation","src":"4752:301:162","text":" @notice Returns the active reward allocation set by the validator with given pubkey.\n @dev This will return active reward allocation set by validators even if its not valid.\n @param valPubkey The validator's pubkey.\n @return rewardAllocation The reward allocation."},"functionSelector":"230288ce","implemented":false,"kind":"function","modifiers":[],"name":"getSetActiveRewardAllocation","nameLocation":"5067:28:162","parameters":{"id":92236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92235,"mutability":"mutable","name":"valPubkey","nameLocation":"5111:9:162","nodeType":"VariableDeclaration","scope":92241,"src":"5096:24:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":92234,"name":"bytes","nodeType":"ElementaryTypeName","src":"5096:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5095:26:162"},"returnParameters":{"id":92240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92241,"src":"5145:23:162","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_memory_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"},"typeName":{"id":92238,"nodeType":"UserDefinedTypeName","pathNode":{"id":92237,"name":"RewardAllocation","nameLocations":["5145:16:162"],"nodeType":"IdentifierPath","referencedDeclaration":92154,"src":"5145:16:162"},"referencedDeclaration":92154,"src":"5145:16:162","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_storage_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"}},"visibility":"internal"}],"src":"5144:25:162"},"scope":92320,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":92248,"nodeType":"FunctionDefinition","src":"5361:86:162","nodes":[],"documentation":{"id":92242,"nodeType":"StructuredDocumentation","src":"5176:180:162","text":" @notice Returns the default reward allocation for validators that do not have a reward allocation.\n @return rewardAllocation The default reward allocation."},"functionSelector":"17dbf270","implemented":false,"kind":"function","modifiers":[],"name":"getDefaultRewardAllocation","nameLocation":"5370:26:162","parameters":{"id":92243,"nodeType":"ParameterList","parameters":[],"src":"5396:2:162"},"returnParameters":{"id":92247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92248,"src":"5422:23:162","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_memory_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"},"typeName":{"id":92245,"nodeType":"UserDefinedTypeName","pathNode":{"id":92244,"name":"RewardAllocation","nameLocations":["5422:16:162"],"nodeType":"IdentifierPath","referencedDeclaration":92154,"src":"5422:16:162"},"referencedDeclaration":92154,"src":"5422:16:162","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_storage_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"}},"visibility":"internal"}],"src":"5421:25:162"},"scope":92320,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":92258,"nodeType":"FunctionDefinition","src":"5776:161:162","nodes":[],"documentation":{"id":92249,"nodeType":"StructuredDocumentation","src":"5453:318:162","text":" @notice Returns the status of whether a queued reward allocation is ready to be activated.\n @param valPubkey The validator's pubkey.\n @param blockNumber The block number to be queried.\n @return isReady True if the queued reward allocation is ready to be activated, false otherwise."},"functionSelector":"722f8e0a","implemented":false,"kind":"function","modifiers":[],"name":"isQueuedRewardAllocationReady","nameLocation":"5785:29:162","parameters":{"id":92254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92251,"mutability":"mutable","name":"valPubkey","nameLocation":"5839:9:162","nodeType":"VariableDeclaration","scope":92258,"src":"5824:24:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":92250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5824:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":92253,"mutability":"mutable","name":"blockNumber","nameLocation":"5866:11:162","nodeType":"VariableDeclaration","scope":92258,"src":"5858:19:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92252,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:162","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5814:69:162"},"returnParameters":{"id":92257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92258,"src":"5931:4:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92255,"name":"bool","nodeType":"ElementaryTypeName","src":"5931:4:162","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5930:6:162"},"scope":92320,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":92264,"nodeType":"FunctionDefinition","src":"6322:48:162","nodes":[],"documentation":{"id":92259,"nodeType":"StructuredDocumentation","src":"5943:374:162","text":" @notice Returns the status of whether the BeraChef contract is ready to be used.\n @dev This function should be used by all contracts that depend on a system call.\n @dev This will return false if the governance module has not set a default reward allocation yet.\n @return isReady True if the BeraChef is ready to be used, false otherwise."},"functionSelector":"a094a031","implemented":false,"kind":"function","modifiers":[],"name":"isReady","nameLocation":"6331:7:162","parameters":{"id":92260,"nodeType":"ParameterList","parameters":[],"src":"6338:2:162"},"returnParameters":{"id":92263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92264,"src":"6364:4:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92261,"name":"bool","nodeType":"ElementaryTypeName","src":"6364:4:162","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6363:6:162"},"scope":92320,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":92270,"nodeType":"FunctionDefinition","src":"6733:95:162","nodes":[],"documentation":{"id":92265,"nodeType":"StructuredDocumentation","src":"6659:69:162","text":"@notice Sets the maximum number of weights per reward allocation."},"functionSelector":"66204c78","implemented":false,"kind":"function","modifiers":[],"name":"setMaxNumWeightsPerRewardAllocation","nameLocation":"6742:35:162","parameters":{"id":92268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92267,"mutability":"mutable","name":"_maxNumWeightsPerRewardAllocation","nameLocation":"6784:33:162","nodeType":"VariableDeclaration","scope":92270,"src":"6778:39:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":92266,"name":"uint8","nodeType":"ElementaryTypeName","src":"6778:5:162","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6777:41:162"},"returnParameters":{"id":92269,"nodeType":"ParameterList","parameters":[],"src":"6827:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":92276,"nodeType":"FunctionDefinition","src":"6921:84:162","nodes":[],"documentation":{"id":92271,"nodeType":"StructuredDocumentation","src":"6834:82:162","text":"@notice Sets the delay in blocks before a new reward allocation can be queued."},"functionSelector":"9ca2626c","implemented":false,"kind":"function","modifiers":[],"name":"setRewardAllocationBlockDelay","nameLocation":"6930:29:162","parameters":{"id":92274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92273,"mutability":"mutable","name":"_rewardAllocationBlockDelay","nameLocation":"6967:27:162","nodeType":"VariableDeclaration","scope":92276,"src":"6960:34:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92272,"name":"uint64","nodeType":"ElementaryTypeName","src":"6960:6:162","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6959:36:162"},"returnParameters":{"id":92275,"nodeType":"ParameterList","parameters":[],"src":"7004:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":92286,"nodeType":"FunctionDefinition","src":"7397:106:162","nodes":[],"documentation":{"id":92277,"nodeType":"StructuredDocumentation","src":"7011:381:162","text":" @notice Updates the vault's whitelisted status\n @notice The caller of this function must be the governance module account.\n @param receiver The address to remove or add as whitelisted vault.\n @param isWhitelisted The whitelist status; true if the receiver is being whitelisted, false otherwise.\n @param metadata The metadata of the vault."},"functionSelector":"fb9f6fde","implemented":false,"kind":"function","modifiers":[],"name":"setVaultWhitelistedStatus","nameLocation":"7406:25:162","parameters":{"id":92284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92279,"mutability":"mutable","name":"receiver","nameLocation":"7440:8:162","nodeType":"VariableDeclaration","scope":92286,"src":"7432:16:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92278,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:162","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92281,"mutability":"mutable","name":"isWhitelisted","nameLocation":"7455:13:162","nodeType":"VariableDeclaration","scope":92286,"src":"7450:18:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92280,"name":"bool","nodeType":"ElementaryTypeName","src":"7450:4:162","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":92283,"mutability":"mutable","name":"metadata","nameLocation":"7484:8:162","nodeType":"VariableDeclaration","scope":92286,"src":"7470:22:162","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":92282,"name":"string","nodeType":"ElementaryTypeName","src":"7470:6:162","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7431:62:162"},"returnParameters":{"id":92285,"nodeType":"ParameterList","parameters":[],"src":"7502:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":92294,"nodeType":"FunctionDefinition","src":"7867:91:162","nodes":[],"documentation":{"id":92287,"nodeType":"StructuredDocumentation","src":"7509:353:162","text":" @notice Updates the metadata of a whitelisted vault, reverts if vault is not whitelisted.\n @notice The caller of this function must be the governance module account.\n @param receiver The address of the whitelisted vault.\n @param metadata The metadata of the vault, to associate info with the vault in the events log."},"functionSelector":"69ed1708","implemented":false,"kind":"function","modifiers":[],"name":"updateWhitelistedVaultMetadata","nameLocation":"7876:30:162","parameters":{"id":92292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92289,"mutability":"mutable","name":"receiver","nameLocation":"7915:8:162","nodeType":"VariableDeclaration","scope":92294,"src":"7907:16:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92288,"name":"address","nodeType":"ElementaryTypeName","src":"7907:7:162","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92291,"mutability":"mutable","name":"metadata","nameLocation":"7939:8:162","nodeType":"VariableDeclaration","scope":92294,"src":"7925:22:162","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":92290,"name":"string","nodeType":"ElementaryTypeName","src":"7925:6:162","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7906:42:162"},"returnParameters":{"id":92293,"nodeType":"ParameterList","parameters":[],"src":"7957:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":92301,"nodeType":"FunctionDefinition","src":"8224:89:162","nodes":[],"documentation":{"id":92295,"nodeType":"StructuredDocumentation","src":"7964:255:162","text":" @notice Sets the default reward allocation for validators that do not have a reward allocation.\n @dev The caller of this function must be the governance module account.\n @param rewardAllocation The default reward allocation."},"functionSelector":"c89f2665","implemented":false,"kind":"function","modifiers":[],"name":"setDefaultRewardAllocation","nameLocation":"8233:26:162","parameters":{"id":92299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92298,"mutability":"mutable","name":"rewardAllocation","nameLocation":"8286:16:162","nodeType":"VariableDeclaration","scope":92301,"src":"8260:42:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_calldata_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"},"typeName":{"id":92297,"nodeType":"UserDefinedTypeName","pathNode":{"id":92296,"name":"RewardAllocation","nameLocations":["8260:16:162"],"nodeType":"IdentifierPath","referencedDeclaration":92154,"src":"8260:16:162"},"referencedDeclaration":92154,"src":"8260:16:162","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$92154_storage_ptr","typeString":"struct IBeraChef_V0.RewardAllocation"}},"visibility":"internal"}],"src":"8259:44:162"},"returnParameters":{"id":92300,"nodeType":"ParameterList","parameters":[],"src":"8312:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":92313,"nodeType":"FunctionDefinition","src":"9095:153:162","nodes":[],"documentation":{"id":92302,"nodeType":"StructuredDocumentation","src":"8602:488:162","text":" @notice Add a new reward allocation to the queue for validator with given pubkey. Does not allow overwriting of\n existing queued reward allocation.\n @dev The weights of the reward allocation must add up to 100% or 1e4.\n Only whitelisted pools may be used as well.\n @param valPubkey The validator's pubkey.\n @param startBlock The block that the reward allocation goes into effect.\n @param weights The weights of the reward allocation."},"functionSelector":"e5eb90aa","implemented":false,"kind":"function","modifiers":[],"name":"queueNewRewardAllocation","nameLocation":"9104:24:162","parameters":{"id":92311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92304,"mutability":"mutable","name":"valPubkey","nameLocation":"9153:9:162","nodeType":"VariableDeclaration","scope":92313,"src":"9138:24:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":92303,"name":"bytes","nodeType":"ElementaryTypeName","src":"9138:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":92306,"mutability":"mutable","name":"startBlock","nameLocation":"9179:10:162","nodeType":"VariableDeclaration","scope":92313,"src":"9172:17:162","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92305,"name":"uint64","nodeType":"ElementaryTypeName","src":"9172:6:162","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":92310,"mutability":"mutable","name":"weights","nameLocation":"9217:7:162","nodeType":"VariableDeclaration","scope":92313,"src":"9199:25:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IBeraChef_V0.Weight[]"},"typeName":{"baseType":{"id":92308,"nodeType":"UserDefinedTypeName","pathNode":{"id":92307,"name":"Weight","nameLocations":["9199:6:162"],"nodeType":"IdentifierPath","referencedDeclaration":92160,"src":"9199:6:162"},"referencedDeclaration":92160,"src":"9199:6:162","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$92160_storage_ptr","typeString":"struct IBeraChef_V0.Weight"}},"id":92309,"nodeType":"ArrayTypeName","src":"9199:8:162","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$92160_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V0.Weight[]"}},"visibility":"internal"}],"src":"9128:102:162"},"returnParameters":{"id":92312,"nodeType":"ParameterList","parameters":[],"src":"9247:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":92319,"nodeType":"FunctionDefinition","src":"9470:80:162","nodes":[],"documentation":{"id":92314,"nodeType":"StructuredDocumentation","src":"9254:211:162","text":"@notice Activates the queued reward allocation for a validator if its ready for the current block.\n @dev Should be called by the distribution contract.\n @param valPubkey The validator's pubkey."},"functionSelector":"6ed0bf9a","implemented":false,"kind":"function","modifiers":[],"name":"activateReadyQueuedRewardAllocation","nameLocation":"9479:35:162","parameters":{"id":92317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92316,"mutability":"mutable","name":"valPubkey","nameLocation":"9530:9:162","nodeType":"VariableDeclaration","scope":92319,"src":"9515:24:162","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":92315,"name":"bytes","nodeType":"ElementaryTypeName","src":"9515:5:162","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9514:26:162"},"returnParameters":{"id":92318,"nodeType":"ParameterList","parameters":[],"src":"9549:0:162"},"scope":92320,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":92145,"name":"IPOLErrors","nameLocations":["201:10:162"],"nodeType":"IdentifierPath","referencedDeclaration":81420,"src":"201:10:162"},"id":92146,"nodeType":"InheritanceSpecifier","src":"201:10:162"}],"canonicalName":"IBeraChef_V0","contractDependencies":[],"contractKind":"interface","documentation":{"id":92144,"nodeType":"StructuredDocumentation","src":"130:45:162","text":"@notice Interface of the BeraChef module"},"fullyImplemented":false,"linearizedBaseContracts":[92320,81420,68947],"name":"IBeraChef_V0","nameLocation":"185:12:162","scope":92321,"usedErrors":[68934,68936,68938,68940,68942,68944,68946,81272,81274,81276,81278,81280,81282,81284,81286,81288,81290,81292,81294,81296,81298,81300,81302,81304,81306,81308,81310,81312,81314,81316,81318,81320,81322,81324,81326,81328,81330,81332,81334,81336,81338,81340,81342,81344,81346,81348,81350,81352,81354,81356,81358,81360,81362,81364,81366,81368,81370,81372,81374,81376,81378,81381,81384,81387,81390,81393,81396,81399,81402,81405,81407,81409,81411,81413,81415,81417,81419],"usedEvents":[92165,92170,92179,92186,92197,92208,92214]}],"license":"BUSL-1.1"},"id":162}