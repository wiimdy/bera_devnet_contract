{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@mock/=test/mock/\",\":@openzeppelin-gov-ext/=node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/\",\":@openzeppelin-gov/=node_modules/@openzeppelin/contracts-upgradeable/governance/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@pythnetwork/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solady/src/=lib/solady/src/\",\":solady/test/=lib/solady/test/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":transient-goodies/=lib/transient-goodies/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@mock/=test/mock/","@openzeppelin-gov-ext/=node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/","@openzeppelin-gov/=node_modules/@openzeppelin/contracts-upgradeable/governance/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@prb/math/=node_modules/@prb/math/","@pythnetwork/=node_modules/@pythnetwork/pyth-sdk-solidity/","ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solady/src/=lib/solady/src/","solady/test/=lib/solady/test/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","transient-goodies/=lib/transient-goodies/src/"],"optimizer":{"enabled":true,"runs":4294967295},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/Context.sol":"Context"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","id":52869,"exportedSymbols":{"Context":[52868]},"nodeType":"SourceUnit","src":"101:862:74","nodes":[{"id":52840,"nodeType":"PragmaDirective","src":"101:24:74","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":52868,"nodeType":"ContractDefinition","src":"624:338:74","nodes":[{"id":52850,"nodeType":"FunctionDefinition","src":"656:96:74","nodes":[],"body":{"id":52849,"nodeType":"Block","src":"718:34:74","nodes":[],"statements":[{"expression":{"expression":{"id":52846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:74","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":52847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:74","memberName":"sender","nodeType":"MemberAccess","src":"735:10:74","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":52845,"id":52848,"nodeType":"Return","src":"728:17:74"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:74","parameters":{"id":52842,"nodeType":"ParameterList","parameters":[],"src":"675:2:74"},"returnParameters":{"id":52845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52850,"src":"709:7:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52843,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:74","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:74"},"scope":52868,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":52859,"nodeType":"FunctionDefinition","src":"758:99:74","nodes":[],"body":{"id":52858,"nodeType":"Block","src":"825:32:74","nodes":[],"statements":[{"expression":{"expression":{"id":52855,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:74","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":52856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:74","memberName":"data","nodeType":"MemberAccess","src":"842:8:74","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":52854,"id":52857,"nodeType":"Return","src":"835:15:74"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:74","parameters":{"id":52851,"nodeType":"ParameterList","parameters":[],"src":"775:2:74"},"returnParameters":{"id":52854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52859,"src":"809:14:74","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52852,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:74","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:74"},"scope":52868,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":52867,"nodeType":"FunctionDefinition","src":"863:97:74","nodes":[],"body":{"id":52866,"nodeType":"Block","src":"935:25:74","nodes":[],"statements":[{"expression":{"hexValue":"30","id":52864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:74","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":52863,"id":52865,"nodeType":"Return","src":"945:8:74"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:74","parameters":{"id":52860,"nodeType":"ParameterList","parameters":[],"src":"892:2:74"},"returnParameters":{"id":52863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52867,"src":"926:7:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52861,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:74","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:74"},"scope":52868,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":52841,"nodeType":"StructuredDocumentation","src":"127:496:74","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[52868],"name":"Context","nameLocation":"642:7:74","scope":52869,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":74}