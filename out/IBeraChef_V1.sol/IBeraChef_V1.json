{"abi":[{"type":"function","name":"activateQueuedValCommission","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"activateReadyQueuedRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getActiveRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V1.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getDefaultRewardAllocation","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V1.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getQueuedRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V1.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getSetActiveRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V1.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"getValCommissionOnIncentiveTokens","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getValQueuedCommissionOnIncentiveTokens","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IBeraChef_V1.QueuedCommissionRateChange","components":[{"name":"blockNumberLast","type":"uint32","internalType":"uint32"},{"name":"commissionRate","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getValidatorIncentiveTokenShare","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"},{"name":"incentiveTokenAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isQueuedRewardAllocationReady","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isReady","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"queueNewRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"},{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"queueValCommission","inputs":[{"name":"valPubkey","type":"bytes","internalType":"bytes"},{"name":"commissionRate","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setCommissionChangeDelay","inputs":[{"name":"_commissionChangeDelay","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDefaultRewardAllocation","inputs":[{"name":"rewardAllocation","type":"tuple","internalType":"struct IBeraChef_V1.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxNumWeightsPerRewardAllocation","inputs":[{"name":"_maxNumWeightsPerRewardAllocation","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setRewardAllocationBlockDelay","inputs":[{"name":"_rewardAllocationBlockDelay","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultWhitelistedStatus","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"isWhitelisted","type":"bool","internalType":"bool"},{"name":"metadata","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateWhitelistedVaultMetadata","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"metadata","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ActivateRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"startBlock","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"weights","type":"tuple[]","indexed":false,"internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"anonymous":false},{"type":"event","name":"CommissionChangeDelaySet","inputs":[{"name":"commissionChangeDelay","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"MaxNumWeightsPerRewardAllocationSet","inputs":[{"name":"maxNumWeightsPerRewardAllocation","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"QueueRewardAllocation","inputs":[{"name":"valPubkey","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"startBlock","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"weights","type":"tuple[]","indexed":false,"internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"anonymous":false},{"type":"event","name":"QueuedValCommission","inputs":[{"name":"valPubkey","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"queuedCommissionRate","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"RewardAllocationBlockDelaySet","inputs":[{"name":"rewardAllocationBlockDelay","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"SetDefaultRewardAllocation","inputs":[{"name":"rewardAllocation","type":"tuple","indexed":false,"internalType":"struct IBeraChef_V1.RewardAllocation","components":[{"name":"startBlock","type":"uint64","internalType":"uint64"},{"name":"weights","type":"tuple[]","internalType":"struct IBeraChef_V1.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}]}],"anonymous":false},{"type":"event","name":"ValCommissionSet","inputs":[{"name":"valPubkey","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"oldCommissionRate","type":"uint96","indexed":false,"internalType":"uint96"},{"name":"newCommissionRate","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"VaultWhitelistedStatusUpdated","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"isWhitelisted","type":"bool","indexed":true,"internalType":"bool"},{"name":"metadata","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"WhitelistedVaultMetadataUpdated","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"metadata","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"error","name":"AmountLessThanMinIncentiveRate","inputs":[]},{"type":"error","name":"CannotRecoverIncentiveToken","inputs":[]},{"type":"error","name":"CannotRecoverRewardToken","inputs":[]},{"type":"error","name":"CannotRecoverStakingToken","inputs":[]},{"type":"error","name":"CommissionChangeAlreadyQueued","inputs":[]},{"type":"error","name":"CommissionNotQueuedOrDelayNotPassed","inputs":[]},{"type":"error","name":"DepositNotMultipleOfGwei","inputs":[]},{"type":"error","name":"DepositValueTooHigh","inputs":[]},{"type":"error","name":"DonateAmountLessThanPayoutAmount","inputs":[]},{"type":"error","name":"IncentiveRateTooHigh","inputs":[]},{"type":"error","name":"IndexOutOfRange","inputs":[]},{"type":"error","name":"InsolventReward","inputs":[]},{"type":"error","name":"InsufficientDelegateStake","inputs":[]},{"type":"error","name":"InsufficientDeposit","inputs":[]},{"type":"error","name":"InsufficientIncentiveTokens","inputs":[]},{"type":"error","name":"InsufficientSelfStake","inputs":[]},{"type":"error","name":"InsufficientStake","inputs":[]},{"type":"error","name":"InvalidActivateBoostDelay","inputs":[]},{"type":"error","name":"InvalidArray","inputs":[]},{"type":"error","name":"InvalidBaseRate","inputs":[]},{"type":"error","name":"InvalidBoostMultiplier","inputs":[]},{"type":"error","name":"InvalidCommissionChangeDelay","inputs":[]},{"type":"error","name":"InvalidCommissionValue","inputs":[]},{"type":"error","name":"InvalidCredentialsLength","inputs":[]},{"type":"error","name":"InvalidDistribution","inputs":[]},{"type":"error","name":"InvalidDropBoostDelay","inputs":[]},{"type":"error","name":"InvalidIncentiveRate","inputs":[]},{"type":"error","name":"InvalidMaxIncentiveTokensCount","inputs":[]},{"type":"error","name":"InvalidMaxWeightPerVault","inputs":[]},{"type":"error","name":"InvalidMerkleRoot","inputs":[]},{"type":"error","name":"InvalidMinBoostedRewardRate","inputs":[]},{"type":"error","name":"InvalidProof","inputs":[]},{"type":"error","name":"InvalidPubKeyLength","inputs":[]},{"type":"error","name":"InvalidRewardAllocationWeights","inputs":[]},{"type":"error","name":"InvalidRewardClaimDelay","inputs":[]},{"type":"error","name":"InvalidRewardConvexity","inputs":[]},{"type":"error","name":"InvalidRewardRate","inputs":[]},{"type":"error","name":"InvalidSignatureLength","inputs":[]},{"type":"error","name":"InvalidStartBlock","inputs":[]},{"type":"error","name":"InvalidToken","inputs":[]},{"type":"error","name":"InvalidWeight","inputs":[]},{"type":"error","name":"InvalidateDefaultRewardAllocation","inputs":[]},{"type":"error","name":"InvariantCheckFailed","inputs":[]},{"type":"error","name":"MaxNumWeightsPerRewardAllocationIsZero","inputs":[]},{"type":"error","name":"MinIncentiveRateIsZero","inputs":[]},{"type":"error","name":"NotAContract","inputs":[]},{"type":"error","name":"NotApprovedSender","inputs":[]},{"type":"error","name":"NotBGT","inputs":[]},{"type":"error","name":"NotBlockRewardController","inputs":[]},{"type":"error","name":"NotDelegate","inputs":[]},{"type":"error","name":"NotDistributor","inputs":[]},{"type":"error","name":"NotEnoughBalance","inputs":[]},{"type":"error","name":"NotEnoughBoostedBalance","inputs":[]},{"type":"error","name":"NotEnoughTime","inputs":[]},{"type":"error","name":"NotFactoryVault","inputs":[]},{"type":"error","name":"NotFeeCollector","inputs":[]},{"type":"error","name":"NotIncentiveManager","inputs":[]},{"type":"error","name":"NotNewOperator","inputs":[]},{"type":"error","name":"NotOperator","inputs":[]},{"type":"error","name":"NotWhitelistedVault","inputs":[]},{"type":"error","name":"OperatorAlreadySet","inputs":[]},{"type":"error","name":"PayoutAmountIsZero","inputs":[]},{"type":"error","name":"RewardAllocationAlreadyQueued","inputs":[]},{"type":"error","name":"RewardAllocationBlockDelayTooLarge","inputs":[]},{"type":"error","name":"RewardCycleNotEnded","inputs":[]},{"type":"error","name":"RewardInactive","inputs":[]},{"type":"error","name":"RewardsDurationIsZero","inputs":[]},{"type":"error","name":"StakeAmountIsZero","inputs":[]},{"type":"error","name":"TimestampAlreadyProcessed","inputs":[]},{"type":"error","name":"TokenAlreadyWhitelistedOrLimitReached","inputs":[]},{"type":"error","name":"TokenNotWhitelisted","inputs":[]},{"type":"error","name":"TooManyWeights","inputs":[]},{"type":"error","name":"TotalSupplyOverflow","inputs":[]},{"type":"error","name":"WithdrawAmountIsZero","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroOperatorOnFirstDeposit","inputs":[]},{"type":"error","name":"ZeroPercentageWeight","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateQueuedValCommission(bytes)":"37e4c5bf","activateReadyQueuedRewardAllocation(bytes)":"6ed0bf9a","getActiveRewardAllocation(bytes)":"da6f7563","getDefaultRewardAllocation()":"17dbf270","getQueuedRewardAllocation(bytes)":"4ecbf5c0","getSetActiveRewardAllocation(bytes)":"230288ce","getValCommissionOnIncentiveTokens(bytes)":"61b8b560","getValQueuedCommissionOnIncentiveTokens(bytes)":"a83f0817","getValidatorIncentiveTokenShare(bytes,uint256)":"3909cbd5","isQueuedRewardAllocationReady(bytes,uint256)":"722f8e0a","isReady()":"a094a031","queueNewRewardAllocation(bytes,uint64,(address,uint96)[])":"e5eb90aa","queueValCommission(bytes,uint96)":"8f7e0f0b","setCommissionChangeDelay(uint64)":"7239e8ca","setDefaultRewardAllocation((uint64,(address,uint96)[]))":"c89f2665","setMaxNumWeightsPerRewardAllocation(uint8)":"66204c78","setRewardAllocationBlockDelay(uint64)":"9ca2626c","setVaultWhitelistedStatus(address,bool,string)":"fb9f6fde","updateWhitelistedVaultMetadata(address,string)":"69ed1708"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AmountLessThanMinIncentiveRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRecoverIncentiveToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRecoverRewardToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRecoverStakingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommissionChangeAlreadyQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommissionNotQueuedOrDelayNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositNotMultipleOfGwei\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositValueTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DonateAmountLessThanPayoutAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncentiveRateTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsolventReward\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientDelegateStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientIncentiveTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSelfStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidActivateBoostDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBaseRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBoostMultiplier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommissionChangeDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommissionValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCredentialsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDropBoostDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIncentiveRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxIncentiveTokensCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxWeightPerVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinBoostedRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPubKeyLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardAllocationWeights\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardClaimDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardConvexity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStartBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidateDefaultRewardAllocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvariantCheckFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxNumWeightsPerRewardAllocationIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinIncentiveRateIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBGT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBlockRewardController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDistributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBoostedBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFactoryVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeCollector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotIncentiveManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNewOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistedVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayoutAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAllocationAlreadyQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAllocationBlockDelayTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardCycleNotEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardsDurationIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimestampAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyWhitelistedOrLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyWeights\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroOperatorOnFirstDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPercentageWeight\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"name\":\"ActivateRewardAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"commissionChangeDelay\",\"type\":\"uint64\"}],\"name\":\"CommissionChangeDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"maxNumWeightsPerRewardAllocation\",\"type\":\"uint8\"}],\"name\":\"MaxNumWeightsPerRewardAllocationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"name\":\"QueueRewardAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"queuedCommissionRate\",\"type\":\"uint96\"}],\"name\":\"QueuedValCommission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"rewardAllocationBlockDelay\",\"type\":\"uint64\"}],\"name\":\"RewardAllocationBlockDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IBeraChef_V1.RewardAllocation\",\"name\":\"rewardAllocation\",\"type\":\"tuple\"}],\"name\":\"SetDefaultRewardAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"oldCommissionRate\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newCommissionRate\",\"type\":\"uint96\"}],\"name\":\"ValCommissionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"VaultWhitelistedStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"WhitelistedVaultMetadataUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"activateQueuedValCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"activateReadyQueuedRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getActiveRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V1.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V1.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getQueuedRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V1.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getSetActiveRewardAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V1.RewardAllocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getValCommissionOnIncentiveTokens\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"}],\"name\":\"getValQueuedCommissionOnIncentiveTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"blockNumberLast\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"commissionRate\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.QueuedCommissionRateChange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"incentiveTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getValidatorIncentiveTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"isQueuedRewardAllocationReady\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReady\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"name\":\"queueNewRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"valPubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"commissionRate\",\"type\":\"uint96\"}],\"name\":\"queueValCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_commissionChangeDelay\",\"type\":\"uint64\"}],\"name\":\"setCommissionChangeDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef_V1.Weight[]\",\"name\":\"weights\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBeraChef_V1.RewardAllocation\",\"name\":\"rewardAllocation\",\"type\":\"tuple\"}],\"name\":\"setDefaultRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_maxNumWeightsPerRewardAllocation\",\"type\":\"uint8\"}],\"name\":\"setMaxNumWeightsPerRewardAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_rewardAllocationBlockDelay\",\"type\":\"uint64\"}],\"name\":\"setRewardAllocationBlockDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"setVaultWhitelistedStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"updateWhitelistedVaultMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"DepositNotMultipleOfGwei()\":[{\"details\":\"Error thrown when the deposit amount is not a multiple of Gwei.\"}],\"DepositValueTooHigh()\":[{\"details\":\"Error thrown when the deposit amount is too high, since it is a uint64.\"}],\"InsufficientDeposit()\":[{\"details\":\"Error thrown when the deposit amount is too small, to prevent dust deposits.\"}],\"InvalidCredentialsLength()\":[{\"details\":\"Error thrown when the withdrawal credentials length is not 32 bytes.\"}],\"InvalidPubKeyLength()\":[{\"details\":\"Error thrown when the public key length is not 48 bytes.\"}],\"InvalidSignatureLength()\":[{\"details\":\"Error thrown when the signature length is not 96 bytes.\"}],\"NotNewOperator()\":[{\"details\":\"Error thrown when the caller is not the current operator.\"}],\"OperatorAlreadySet()\":[{\"details\":\"Error thrown when the operator is already set and caller passed non-zero operator.\"}],\"ZeroOperatorOnFirstDeposit()\":[{\"details\":\"Error thrown when the input operator is zero address on the first deposit.\"}]},\"events\":{\"ActivateRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"params\":{\"startBlock\":\"The block that the reward allocation goes into effect.\",\"valPubkey\":\"The validator's pubkey.\",\"weights\":\"The weights of the reward allocation.\"}},\"CommissionChangeDelaySet(uint64)\":{\"params\":{\"commissionChangeDelay\":\"The delay in blocks to activate a queued commission change.\"}},\"MaxNumWeightsPerRewardAllocationSet(uint8)\":{\"params\":{\"maxNumWeightsPerRewardAllocation\":\"The maximum number of weights per reward allocation.\"}},\"QueueRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"params\":{\"startBlock\":\"The block that the reward allocation goes into effect.\",\"valPubkey\":\"The validator's pubkey.\",\"weights\":\"The weights of the reward allocation.\"}},\"QueuedValCommission(bytes,uint96)\":{\"params\":{\"queuedCommissionRate\":\"The queued commission rate of the validator on the incentive tokens.\",\"valPubkey\":\"The validator's pubkey.\"}},\"RewardAllocationBlockDelaySet(uint64)\":{\"params\":{\"rewardAllocationBlockDelay\":\"The delay in blocks before a new reward allocation can go into effect.\"}},\"SetDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"params\":{\"rewardAllocation\":\"The default reward allocation.\"}},\"ValCommissionSet(bytes,uint96,uint96)\":{\"params\":{\"newCommissionRate\":\"The new commission rate of the validator on the incentive tokens.\",\"oldCommissionRate\":\"The old commission rate of the validator on the incentive tokens.\",\"valPubkey\":\"The validator's pubkey.\"}},\"VaultWhitelistedStatusUpdated(address,bool,string)\":{\"params\":{\"isWhitelisted\":\"The whitelist status; true if the receiver is being whitelisted, false otherwise.\",\"metadata\":\"The metadata of the vault.\",\"receiver\":\"The address to remove or add as whitelisted vault.\"}},\"WhitelistedVaultMetadataUpdated(address,string)\":{\"params\":{\"metadata\":\"The metadata of the vault.\",\"receiver\":\"The address of the whitelisted vault.\"}}},\"kind\":\"dev\",\"methods\":{\"activateQueuedValCommission(bytes)\":{\"params\":{\"valPubkey\":\"The validator's pubkey.\"}},\"activateReadyQueuedRewardAllocation(bytes)\":{\"details\":\"Should be called by the distribution contract.\",\"params\":{\"valPubkey\":\"The validator's pubkey.\"}},\"getActiveRewardAllocation(bytes)\":{\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"rewardAllocation The active reward allocation.\"}},\"getDefaultRewardAllocation()\":{\"returns\":{\"_0\":\"rewardAllocation The default reward allocation.\"}},\"getQueuedRewardAllocation(bytes)\":{\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"rewardAllocation The queued reward allocation.\"}},\"getSetActiveRewardAllocation(bytes)\":{\"details\":\"This will return active reward allocation set by validators even if its not valid.\",\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"rewardAllocation The reward allocation.\"}},\"getValCommissionOnIncentiveTokens(bytes)\":{\"details\":\"Default commission rate is 5% if the commission was never set.\",\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"commissionRate The commission rate of the validator on the incentive tokens.\"}},\"getValQueuedCommissionOnIncentiveTokens(bytes)\":{\"params\":{\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"queuedCommissionRate The queued commission struct of the validator on the incentive tokens.\"}},\"getValidatorIncentiveTokenShare(bytes,uint256)\":{\"params\":{\"incentiveTokenAmount\":\"The amount of the incentive tokens.\",\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"validatorShare The validator's share of the incentive tokens.\"}},\"isQueuedRewardAllocationReady(bytes,uint256)\":{\"params\":{\"blockNumber\":\"The block number to be queried.\",\"valPubkey\":\"The validator's pubkey.\"},\"returns\":{\"_0\":\"isReady True if the queued reward allocation is ready to be activated, false otherwise.\"}},\"isReady()\":{\"details\":\"This function should be used by all contracts that depend on a system call.This will return false if the governance module has not set a default reward allocation yet.\",\"returns\":{\"_0\":\"isReady True if the BeraChef is ready to be used, false otherwise.\"}},\"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"details\":\"The weights of the reward allocation must add up to 100% or 1e4. Only whitelisted pools may be used as well.\",\"params\":{\"startBlock\":\"The block that the reward allocation goes into effect.\",\"valPubkey\":\"The validator's pubkey.\",\"weights\":\"The weights of the reward allocation.\"}},\"queueValCommission(bytes,uint96)\":{\"details\":\"The caller of this function must be the validator operator address.Revert if already a commission rate change is queued.\",\"params\":{\"commissionRate\":\"The commission rate of the validator on the incentive tokens.\",\"valPubkey\":\"The validator's pubkey.\"}},\"setCommissionChangeDelay(uint64)\":{\"details\":\"Only owner can call this function.\",\"params\":{\"_commissionChangeDelay\":\"The delay in blocks to activate a queued commission change.\"}},\"setDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"details\":\"The caller of this function must be the governance module account.\",\"params\":{\"rewardAllocation\":\"The default reward allocation.\"}},\"setVaultWhitelistedStatus(address,bool,string)\":{\"params\":{\"isWhitelisted\":\"The whitelist status; true if the receiver is being whitelisted, false otherwise.\",\"metadata\":\"The metadata of the vault.\",\"receiver\":\"The address to remove or add as whitelisted vault.\"}},\"updateWhitelistedVaultMetadata(address,string)\":{\"params\":{\"metadata\":\"The metadata of the vault, to associate info with the vault in the events log.\",\"receiver\":\"The address of the whitelisted vault.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ActivateRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Emitted when a new reward allocation has been activated.\"},\"CommissionChangeDelaySet(uint64)\":{\"notice\":\"Emitted when the commission change delay has been set.\"},\"MaxNumWeightsPerRewardAllocationSet(uint8)\":{\"notice\":\"Emitted when the maximum number of weights per reward allocation has been set.\"},\"QueueRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Emitted when a new reward allocation has been queued.\"},\"QueuedValCommission(bytes,uint96)\":{\"notice\":\"Emitted when a validator's commission rate on incentive tokens has been queued.\"},\"RewardAllocationBlockDelaySet(uint64)\":{\"notice\":\"Emitted when the delay in blocks before a new reward allocation can go into effect has been set.\"},\"SetDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"notice\":\"Emitted when the governance module has set a new default reward allocation.\"},\"ValCommissionSet(bytes,uint96,uint96)\":{\"notice\":\"Emitted when the commission rate of a validator on incentive tokens has been set.\"},\"VaultWhitelistedStatusUpdated(address,bool,string)\":{\"notice\":\"Emitted when the vault's whitelisted status have been updated.\"},\"WhitelistedVaultMetadataUpdated(address,string)\":{\"notice\":\"Emitted when the metadata of a whitelisted vault has been updated.\"}},\"kind\":\"user\",\"methods\":{\"activateQueuedValCommission(bytes)\":{\"notice\":\"Activates the queued commission rate of a validator on incentive tokens.\"},\"activateReadyQueuedRewardAllocation(bytes)\":{\"notice\":\"Activates the queued reward allocation for a validator if its ready for the current block.\"},\"getActiveRewardAllocation(bytes)\":{\"notice\":\"Returns the active reward allocation for validator with given pubkey\"},\"getDefaultRewardAllocation()\":{\"notice\":\"Returns the default reward allocation for validators that do not have a reward allocation.\"},\"getQueuedRewardAllocation(bytes)\":{\"notice\":\"Returns the queued reward allocation for a validator with given pubkey\"},\"getSetActiveRewardAllocation(bytes)\":{\"notice\":\"Returns the active reward allocation set by the validator with given pubkey.\"},\"getValCommissionOnIncentiveTokens(bytes)\":{\"notice\":\"Returns the commission rate of a validator on an incentive tokens.\"},\"getValQueuedCommissionOnIncentiveTokens(bytes)\":{\"notice\":\"Returns the queued commission struct of a validator on an incentive tokens.\"},\"getValidatorIncentiveTokenShare(bytes,uint256)\":{\"notice\":\"Returns the validator's share of the incentive tokens based on the validator's commission rate.\"},\"isQueuedRewardAllocationReady(bytes,uint256)\":{\"notice\":\"Returns the status of whether a queued reward allocation is ready to be activated.\"},\"isReady()\":{\"notice\":\"Returns the status of whether the BeraChef contract is ready to be used.\"},\"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Add a new reward allocation to the queue for validator with given pubkey. Does not allow overwriting of existing queued reward allocation.\"},\"queueValCommission(bytes,uint96)\":{\"notice\":\"Queues a commission rate change for a validator on incentive tokens.\"},\"setCommissionChangeDelay(uint64)\":{\"notice\":\"Sets the commission change delay.\"},\"setDefaultRewardAllocation((uint64,(address,uint96)[]))\":{\"notice\":\"Sets the default reward allocation for validators that do not have a reward allocation.\"},\"setMaxNumWeightsPerRewardAllocation(uint8)\":{\"notice\":\"Sets the maximum number of weights per reward allocation.\"},\"setRewardAllocationBlockDelay(uint64)\":{\"notice\":\"Sets the delay in blocks before a new reward allocation can be queued.\"},\"setVaultWhitelistedStatus(address,bool,string)\":{\"notice\":\"Updates the vault's whitelisted statusThe caller of this function must be the governance module account.\"},\"updateWhitelistedVaultMetadata(address,string)\":{\"notice\":\"Updates the metadata of a whitelisted vault, reverts if vault is not whitelisted.The caller of this function must be the governance module account.\"}},\"notice\":\"Interface of the BeraChef module\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/V1_Contracts/interfaces/IBeraChef_V1.sol\":\"IBeraChef_V1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[\":@mock/=test/mock/\",\":@openzeppelin-gov-ext/=node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/\",\":@openzeppelin-gov/=node_modules/@openzeppelin/contracts-upgradeable/governance/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@pythnetwork/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solady/src/=lib/solady/src/\",\":solady/test/=lib/solady/test/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":transient-goodies/=lib/transient-goodies/src/\"]},\"sources\":{\"src/V1_Contracts/interfaces/IBeraChef_V1.sol\":{\"keccak256\":\"0xa333ad50a4e846dec53503614322972abe07521c323f783c1210cc506be71c62\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://58ae8501e2addd3f779be5c9979a00ec8d5ce9e407c2f72f12cca75ba525d4c4\",\"dweb:/ipfs/QmZUew4Kdfao1duc3vwN555tuC5wB18KCstXm5TZEKhE9c\"]},\"src/base/IStakingRewardsErrors.sol\":{\"keccak256\":\"0xa288fc43d5339a6cb74d707024c83515583bbc9464dc3acf925d83bf2734ee0d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cf55cebb3acd6f33a10b460b070a8681902028594e7cdda99dbe03ac868ebf5b\",\"dweb:/ipfs/QmRC3qu3NyR3u647m7gQ2VcAz9xAbAnWoDmHbVEHJuov8d\"]},\"src/pol/interfaces/IPOLErrors.sol\":{\"keccak256\":\"0xf6c1c487b083b802d10a83198b04d056bf9fb596ad498bd50fe6373aa49eaa34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://910b3e2572f90707b1682c2bde50c28b03e4f7d72ec2b4bae5e0c62bea81ceb9\",\"dweb:/ipfs/QmY4ZdRVK8cYRjkRJVAaEUkGhmzU2SriMQk9JeLTHbBg1A\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AmountLessThanMinIncentiveRate"},{"inputs":[],"type":"error","name":"CannotRecoverIncentiveToken"},{"inputs":[],"type":"error","name":"CannotRecoverRewardToken"},{"inputs":[],"type":"error","name":"CannotRecoverStakingToken"},{"inputs":[],"type":"error","name":"CommissionChangeAlreadyQueued"},{"inputs":[],"type":"error","name":"CommissionNotQueuedOrDelayNotPassed"},{"inputs":[],"type":"error","name":"DepositNotMultipleOfGwei"},{"inputs":[],"type":"error","name":"DepositValueTooHigh"},{"inputs":[],"type":"error","name":"DonateAmountLessThanPayoutAmount"},{"inputs":[],"type":"error","name":"IncentiveRateTooHigh"},{"inputs":[],"type":"error","name":"IndexOutOfRange"},{"inputs":[],"type":"error","name":"InsolventReward"},{"inputs":[],"type":"error","name":"InsufficientDelegateStake"},{"inputs":[],"type":"error","name":"InsufficientDeposit"},{"inputs":[],"type":"error","name":"InsufficientIncentiveTokens"},{"inputs":[],"type":"error","name":"InsufficientSelfStake"},{"inputs":[],"type":"error","name":"InsufficientStake"},{"inputs":[],"type":"error","name":"InvalidActivateBoostDelay"},{"inputs":[],"type":"error","name":"InvalidArray"},{"inputs":[],"type":"error","name":"InvalidBaseRate"},{"inputs":[],"type":"error","name":"InvalidBoostMultiplier"},{"inputs":[],"type":"error","name":"InvalidCommissionChangeDelay"},{"inputs":[],"type":"error","name":"InvalidCommissionValue"},{"inputs":[],"type":"error","name":"InvalidCredentialsLength"},{"inputs":[],"type":"error","name":"InvalidDistribution"},{"inputs":[],"type":"error","name":"InvalidDropBoostDelay"},{"inputs":[],"type":"error","name":"InvalidIncentiveRate"},{"inputs":[],"type":"error","name":"InvalidMaxIncentiveTokensCount"},{"inputs":[],"type":"error","name":"InvalidMaxWeightPerVault"},{"inputs":[],"type":"error","name":"InvalidMerkleRoot"},{"inputs":[],"type":"error","name":"InvalidMinBoostedRewardRate"},{"inputs":[],"type":"error","name":"InvalidProof"},{"inputs":[],"type":"error","name":"InvalidPubKeyLength"},{"inputs":[],"type":"error","name":"InvalidRewardAllocationWeights"},{"inputs":[],"type":"error","name":"InvalidRewardClaimDelay"},{"inputs":[],"type":"error","name":"InvalidRewardConvexity"},{"inputs":[],"type":"error","name":"InvalidRewardRate"},{"inputs":[],"type":"error","name":"InvalidSignatureLength"},{"inputs":[],"type":"error","name":"InvalidStartBlock"},{"inputs":[],"type":"error","name":"InvalidToken"},{"inputs":[],"type":"error","name":"InvalidWeight"},{"inputs":[],"type":"error","name":"InvalidateDefaultRewardAllocation"},{"inputs":[],"type":"error","name":"InvariantCheckFailed"},{"inputs":[],"type":"error","name":"MaxNumWeightsPerRewardAllocationIsZero"},{"inputs":[],"type":"error","name":"MinIncentiveRateIsZero"},{"inputs":[],"type":"error","name":"NotAContract"},{"inputs":[],"type":"error","name":"NotApprovedSender"},{"inputs":[],"type":"error","name":"NotBGT"},{"inputs":[],"type":"error","name":"NotBlockRewardController"},{"inputs":[],"type":"error","name":"NotDelegate"},{"inputs":[],"type":"error","name":"NotDistributor"},{"inputs":[],"type":"error","name":"NotEnoughBalance"},{"inputs":[],"type":"error","name":"NotEnoughBoostedBalance"},{"inputs":[],"type":"error","name":"NotEnoughTime"},{"inputs":[],"type":"error","name":"NotFactoryVault"},{"inputs":[],"type":"error","name":"NotFeeCollector"},{"inputs":[],"type":"error","name":"NotIncentiveManager"},{"inputs":[],"type":"error","name":"NotNewOperator"},{"inputs":[],"type":"error","name":"NotOperator"},{"inputs":[],"type":"error","name":"NotWhitelistedVault"},{"inputs":[],"type":"error","name":"OperatorAlreadySet"},{"inputs":[],"type":"error","name":"PayoutAmountIsZero"},{"inputs":[],"type":"error","name":"RewardAllocationAlreadyQueued"},{"inputs":[],"type":"error","name":"RewardAllocationBlockDelayTooLarge"},{"inputs":[],"type":"error","name":"RewardCycleNotEnded"},{"inputs":[],"type":"error","name":"RewardInactive"},{"inputs":[],"type":"error","name":"RewardsDurationIsZero"},{"inputs":[],"type":"error","name":"StakeAmountIsZero"},{"inputs":[],"type":"error","name":"TimestampAlreadyProcessed"},{"inputs":[],"type":"error","name":"TokenAlreadyWhitelistedOrLimitReached"},{"inputs":[],"type":"error","name":"TokenNotWhitelisted"},{"inputs":[],"type":"error","name":"TooManyWeights"},{"inputs":[],"type":"error","name":"TotalSupplyOverflow"},{"inputs":[],"type":"error","name":"WithdrawAmountIsZero"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroOperatorOnFirstDeposit"},{"inputs":[],"type":"error","name":"ZeroPercentageWeight"},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes","indexed":true},{"internalType":"uint64","name":"startBlock","type":"uint64","indexed":false},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}],"indexed":false}],"type":"event","name":"ActivateRewardAllocation","anonymous":false},{"inputs":[{"internalType":"uint64","name":"commissionChangeDelay","type":"uint64","indexed":false}],"type":"event","name":"CommissionChangeDelaySet","anonymous":false},{"inputs":[{"internalType":"uint8","name":"maxNumWeightsPerRewardAllocation","type":"uint8","indexed":false}],"type":"event","name":"MaxNumWeightsPerRewardAllocationSet","anonymous":false},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes","indexed":true},{"internalType":"uint64","name":"startBlock","type":"uint64","indexed":false},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}],"indexed":false}],"type":"event","name":"QueueRewardAllocation","anonymous":false},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes","indexed":true},{"internalType":"uint96","name":"queuedCommissionRate","type":"uint96","indexed":false}],"type":"event","name":"QueuedValCommission","anonymous":false},{"inputs":[{"internalType":"uint64","name":"rewardAllocationBlockDelay","type":"uint64","indexed":false}],"type":"event","name":"RewardAllocationBlockDelaySet","anonymous":false},{"inputs":[{"internalType":"struct IBeraChef_V1.RewardAllocation","name":"rewardAllocation","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}],"indexed":false}],"type":"event","name":"SetDefaultRewardAllocation","anonymous":false},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes","indexed":true},{"internalType":"uint96","name":"oldCommissionRate","type":"uint96","indexed":false},{"internalType":"uint96","name":"newCommissionRate","type":"uint96","indexed":false}],"type":"event","name":"ValCommissionSet","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"bool","name":"isWhitelisted","type":"bool","indexed":true},{"internalType":"string","name":"metadata","type":"string","indexed":false}],"type":"event","name":"VaultWhitelistedStatusUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"string","name":"metadata","type":"string","indexed":false}],"type":"event","name":"WhitelistedVaultMetadataUpdated","anonymous":false},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"activateQueuedValCommission"},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"activateReadyQueuedRewardAllocation"},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getActiveRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V1.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDefaultRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V1.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getQueuedRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V1.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getSetActiveRewardAllocation","outputs":[{"internalType":"struct IBeraChef_V1.RewardAllocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getValCommissionOnIncentiveTokens","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"getValQueuedCommissionOnIncentiveTokens","outputs":[{"internalType":"struct IBeraChef_V1.QueuedCommissionRateChange","name":"","type":"tuple","components":[{"internalType":"uint32","name":"blockNumberLast","type":"uint32"},{"internalType":"uint96","name":"commissionRate","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"},{"internalType":"uint256","name":"incentiveTokenAmount","type":"uint256"}],"stateMutability":"view","type":"function","name":"getValidatorIncentiveTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"isQueuedRewardAllocationReady","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isReady","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"},{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"queueNewRewardAllocation"},{"inputs":[{"internalType":"bytes","name":"valPubkey","type":"bytes"},{"internalType":"uint96","name":"commissionRate","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"queueValCommission"},{"inputs":[{"internalType":"uint64","name":"_commissionChangeDelay","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setCommissionChangeDelay"},{"inputs":[{"internalType":"struct IBeraChef_V1.RewardAllocation","name":"rewardAllocation","type":"tuple","components":[{"internalType":"uint64","name":"startBlock","type":"uint64"},{"internalType":"struct IBeraChef_V1.Weight[]","name":"weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}]}],"stateMutability":"nonpayable","type":"function","name":"setDefaultRewardAllocation"},{"inputs":[{"internalType":"uint8","name":"_maxNumWeightsPerRewardAllocation","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setMaxNumWeightsPerRewardAllocation"},{"inputs":[{"internalType":"uint64","name":"_rewardAllocationBlockDelay","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setRewardAllocationBlockDelay"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bool","name":"isWhitelisted","type":"bool"},{"internalType":"string","name":"metadata","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setVaultWhitelistedStatus"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"string","name":"metadata","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateWhitelistedVaultMetadata"}],"devdoc":{"kind":"dev","methods":{"activateQueuedValCommission(bytes)":{"params":{"valPubkey":"The validator's pubkey."}},"activateReadyQueuedRewardAllocation(bytes)":{"details":"Should be called by the distribution contract.","params":{"valPubkey":"The validator's pubkey."}},"getActiveRewardAllocation(bytes)":{"params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"rewardAllocation The active reward allocation."}},"getDefaultRewardAllocation()":{"returns":{"_0":"rewardAllocation The default reward allocation."}},"getQueuedRewardAllocation(bytes)":{"params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"rewardAllocation The queued reward allocation."}},"getSetActiveRewardAllocation(bytes)":{"details":"This will return active reward allocation set by validators even if its not valid.","params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"rewardAllocation The reward allocation."}},"getValCommissionOnIncentiveTokens(bytes)":{"details":"Default commission rate is 5% if the commission was never set.","params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"commissionRate The commission rate of the validator on the incentive tokens."}},"getValQueuedCommissionOnIncentiveTokens(bytes)":{"params":{"valPubkey":"The validator's pubkey."},"returns":{"_0":"queuedCommissionRate The queued commission struct of the validator on the incentive tokens."}},"getValidatorIncentiveTokenShare(bytes,uint256)":{"params":{"incentiveTokenAmount":"The amount of the incentive tokens.","valPubkey":"The validator's pubkey."},"returns":{"_0":"validatorShare The validator's share of the incentive tokens."}},"isQueuedRewardAllocationReady(bytes,uint256)":{"params":{"blockNumber":"The block number to be queried.","valPubkey":"The validator's pubkey."},"returns":{"_0":"isReady True if the queued reward allocation is ready to be activated, false otherwise."}},"isReady()":{"details":"This function should be used by all contracts that depend on a system call.This will return false if the governance module has not set a default reward allocation yet.","returns":{"_0":"isReady True if the BeraChef is ready to be used, false otherwise."}},"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])":{"details":"The weights of the reward allocation must add up to 100% or 1e4. Only whitelisted pools may be used as well.","params":{"startBlock":"The block that the reward allocation goes into effect.","valPubkey":"The validator's pubkey.","weights":"The weights of the reward allocation."}},"queueValCommission(bytes,uint96)":{"details":"The caller of this function must be the validator operator address.Revert if already a commission rate change is queued.","params":{"commissionRate":"The commission rate of the validator on the incentive tokens.","valPubkey":"The validator's pubkey."}},"setCommissionChangeDelay(uint64)":{"details":"Only owner can call this function.","params":{"_commissionChangeDelay":"The delay in blocks to activate a queued commission change."}},"setDefaultRewardAllocation((uint64,(address,uint96)[]))":{"details":"The caller of this function must be the governance module account.","params":{"rewardAllocation":"The default reward allocation."}},"setVaultWhitelistedStatus(address,bool,string)":{"params":{"isWhitelisted":"The whitelist status; true if the receiver is being whitelisted, false otherwise.","metadata":"The metadata of the vault.","receiver":"The address to remove or add as whitelisted vault."}},"updateWhitelistedVaultMetadata(address,string)":{"params":{"metadata":"The metadata of the vault, to associate info with the vault in the events log.","receiver":"The address of the whitelisted vault."}}},"version":1},"userdoc":{"kind":"user","methods":{"activateQueuedValCommission(bytes)":{"notice":"Activates the queued commission rate of a validator on incentive tokens."},"activateReadyQueuedRewardAllocation(bytes)":{"notice":"Activates the queued reward allocation for a validator if its ready for the current block."},"getActiveRewardAllocation(bytes)":{"notice":"Returns the active reward allocation for validator with given pubkey"},"getDefaultRewardAllocation()":{"notice":"Returns the default reward allocation for validators that do not have a reward allocation."},"getQueuedRewardAllocation(bytes)":{"notice":"Returns the queued reward allocation for a validator with given pubkey"},"getSetActiveRewardAllocation(bytes)":{"notice":"Returns the active reward allocation set by the validator with given pubkey."},"getValCommissionOnIncentiveTokens(bytes)":{"notice":"Returns the commission rate of a validator on an incentive tokens."},"getValQueuedCommissionOnIncentiveTokens(bytes)":{"notice":"Returns the queued commission struct of a validator on an incentive tokens."},"getValidatorIncentiveTokenShare(bytes,uint256)":{"notice":"Returns the validator's share of the incentive tokens based on the validator's commission rate."},"isQueuedRewardAllocationReady(bytes,uint256)":{"notice":"Returns the status of whether a queued reward allocation is ready to be activated."},"isReady()":{"notice":"Returns the status of whether the BeraChef contract is ready to be used."},"queueNewRewardAllocation(bytes,uint64,(address,uint96)[])":{"notice":"Add a new reward allocation to the queue for validator with given pubkey. Does not allow overwriting of existing queued reward allocation."},"queueValCommission(bytes,uint96)":{"notice":"Queues a commission rate change for a validator on incentive tokens."},"setCommissionChangeDelay(uint64)":{"notice":"Sets the commission change delay."},"setDefaultRewardAllocation((uint64,(address,uint96)[]))":{"notice":"Sets the default reward allocation for validators that do not have a reward allocation."},"setMaxNumWeightsPerRewardAllocation(uint8)":{"notice":"Sets the maximum number of weights per reward allocation."},"setRewardAllocationBlockDelay(uint64)":{"notice":"Sets the delay in blocks before a new reward allocation can be queued."},"setVaultWhitelistedStatus(address,bool,string)":{"notice":"Updates the vault's whitelisted statusThe caller of this function must be the governance module account."},"updateWhitelistedVaultMetadata(address,string)":{"notice":"Updates the metadata of a whitelisted vault, reverts if vault is not whitelisted.The caller of this function must be the governance module account."}},"version":1}},"settings":{"remappings":["@mock/=test/mock/","@openzeppelin-gov-ext/=node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/","@openzeppelin-gov/=node_modules/@openzeppelin/contracts-upgradeable/governance/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@prb/math/=node_modules/@prb/math/","@pythnetwork/=node_modules/@pythnetwork/pyth-sdk-solidity/","ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solady/src/=lib/solady/src/","solady/test/=lib/solady/test/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","transient-goodies/=lib/transient-goodies/src/"],"optimizer":{"enabled":true,"runs":4294967295},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/V1_Contracts/interfaces/IBeraChef_V1.sol":"IBeraChef_V1"},"evmVersion":"cancun","libraries":{}},"sources":{"src/V1_Contracts/interfaces/IBeraChef_V1.sol":{"keccak256":"0xa333ad50a4e846dec53503614322972abe07521c323f783c1210cc506be71c62","urls":["bzz-raw://58ae8501e2addd3f779be5c9979a00ec8d5ce9e407c2f72f12cca75ba525d4c4","dweb:/ipfs/QmZUew4Kdfao1duc3vwN555tuC5wB18KCstXm5TZEKhE9c"],"license":"BUSL-1.1"},"src/base/IStakingRewardsErrors.sol":{"keccak256":"0xa288fc43d5339a6cb74d707024c83515583bbc9464dc3acf925d83bf2734ee0d","urls":["bzz-raw://cf55cebb3acd6f33a10b460b070a8681902028594e7cdda99dbe03ac868ebf5b","dweb:/ipfs/QmRC3qu3NyR3u647m7gQ2VcAz9xAbAnWoDmHbVEHJuov8d"],"license":"BUSL-1.1"},"src/pol/interfaces/IPOLErrors.sol":{"keccak256":"0xf6c1c487b083b802d10a83198b04d056bf9fb596ad498bd50fe6373aa49eaa34","urls":["bzz-raw://910b3e2572f90707b1682c2bde50c28b03e4f7d72ec2b4bae5e0c62bea81ceb9","dweb:/ipfs/QmY4ZdRVK8cYRjkRJVAaEUkGhmzU2SriMQk9JeLTHbBg1A"],"license":"BUSL-1.1"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/V1_Contracts/interfaces/IBeraChef_V1.sol","id":65037,"exportedSymbols":{"IBeraChef_V1":[65036],"IPOLErrors":[81420]},"nodeType":"SourceUnit","src":"37:13635:100","nodes":[{"id":64777,"nodeType":"PragmaDirective","src":"37:24:100","nodes":[],"literals":["solidity","^","0.8",".26"]},{"id":64779,"nodeType":"ImportDirective","src":"63:65:100","nodes":[],"absolutePath":"src/pol/interfaces/IPOLErrors.sol","file":"../../pol/interfaces/IPOLErrors.sol","nameLocation":"-1:-1:-1","scope":65037,"sourceUnit":81421,"symbolAliases":[{"foreign":{"id":64778,"name":"IPOLErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81420,"src":"72:10:100","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65036,"nodeType":"ContractDefinition","src":"175:13496:100","nodes":[{"id":64790,"nodeType":"StructDefinition","src":"553:195:100","nodes":[],"canonicalName":"IBeraChef_V1.RewardAllocation","documentation":{"id":64783,"nodeType":"StructuredDocumentation","src":"501:47:100","text":"@notice Represents a RewardAllocation entry"},"members":[{"constant":false,"id":64785,"mutability":"mutable","name":"startBlock","nameLocation":"656:10:100","nodeType":"VariableDeclaration","scope":64790,"src":"649:17:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":64784,"name":"uint64","nodeType":"ElementaryTypeName","src":"649:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":64789,"mutability":"mutable","name":"weights","nameLocation":"734:7:100","nodeType":"VariableDeclaration","scope":64790,"src":"725:16:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V1.Weight[]"},"typeName":{"baseType":{"id":64787,"nodeType":"UserDefinedTypeName","pathNode":{"id":64786,"name":"Weight","nameLocations":["725:6:100"],"nodeType":"IdentifierPath","referencedDeclaration":64796,"src":"725:6:100"},"referencedDeclaration":64796,"src":"725:6:100","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$64796_storage_ptr","typeString":"struct IBeraChef_V1.Weight"}},"id":64788,"nodeType":"ArrayTypeName","src":"725:8:100","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V1.Weight[]"}},"visibility":"internal"}],"name":"RewardAllocation","nameLocation":"560:16:100","scope":65036,"visibility":"public"},{"id":64796,"nodeType":"StructDefinition","src":"796:433:100","nodes":[],"canonicalName":"IBeraChef_V1.Weight","documentation":{"id":64791,"nodeType":"StructuredDocumentation","src":"754:37:100","text":"@notice Represents a Weight entry"},"members":[{"constant":false,"id":64793,"mutability":"mutable","name":"receiver","nameLocation":"892:8:100","nodeType":"VariableDeclaration","scope":64796,"src":"884:16:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64792,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:100","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":64795,"mutability":"mutable","name":"percentageNumerator","nameLocation":"1203:19:100","nodeType":"VariableDeclaration","scope":64796,"src":"1196:26:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64794,"name":"uint96","nodeType":"ElementaryTypeName","src":"1196:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Weight","nameLocation":"803:6:100","scope":65036,"visibility":"public"},{"id":64802,"nodeType":"StructDefinition","src":"1492:104:100","nodes":[],"canonicalName":"IBeraChef_V1.QueuedCommissionRateChange","documentation":{"id":64797,"nodeType":"StructuredDocumentation","src":"1235:252:100","text":"@notice The struct of validator queued commission rate changes on incentive tokens.\n @param blockNumberLast The last block number commission rate was queued\n @param commissionRate The queued commission rate to be used by the validator"},"members":[{"constant":false,"id":64799,"mutability":"mutable","name":"blockNumberLast","nameLocation":"1543:15:100","nodeType":"VariableDeclaration","scope":64802,"src":"1536:22:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64798,"name":"uint32","nodeType":"ElementaryTypeName","src":"1536:6:100","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":64801,"mutability":"mutable","name":"commissionRate","nameLocation":"1575:14:100","nodeType":"VariableDeclaration","scope":64802,"src":"1568:21:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64800,"name":"uint96","nodeType":"ElementaryTypeName","src":"1568:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"QueuedCommissionRateChange","nameLocation":"1499:26:100","scope":65036,"visibility":"public"},{"id":64808,"nodeType":"StructDefinition","src":"1838:92:100","nodes":[],"canonicalName":"IBeraChef_V1.CommissionRate","documentation":{"id":64803,"nodeType":"StructuredDocumentation","src":"1602:231:100","text":"@notice Commission rate of a validator on incentive tokens\n @param activationBlock The block number in which the commission rate was activated\n @param commissionRate The commission rate to be used by the validator"},"members":[{"constant":false,"id":64805,"mutability":"mutable","name":"activationBlock","nameLocation":"1877:15:100","nodeType":"VariableDeclaration","scope":64808,"src":"1870:22:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64804,"name":"uint32","nodeType":"ElementaryTypeName","src":"1870:6:100","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":64807,"mutability":"mutable","name":"commissionRate","nameLocation":"1909:14:100","nodeType":"VariableDeclaration","scope":64808,"src":"1902:21:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64806,"name":"uint96","nodeType":"ElementaryTypeName","src":"1902:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"CommissionRate","nameLocation":"1845:14:100","scope":65036,"visibility":"public"},{"id":64813,"nodeType":"EventDefinition","src":"2415:82:100","nodes":[],"anonymous":false,"documentation":{"id":64809,"nodeType":"StructuredDocumentation","src":"2219:191:100","text":"@notice Emitted when the maximum number of weights per reward allocation has been set.\n @param maxNumWeightsPerRewardAllocation The maximum number of weights per reward allocation."},"eventSelector":"1f427f3160f84ab8033ba8e3550b2a3f178241305e86660a221c0dc52f3bc9ae","name":"MaxNumWeightsPerRewardAllocationSet","nameLocation":"2421:35:100","parameters":{"id":64812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64811,"indexed":false,"mutability":"mutable","name":"maxNumWeightsPerRewardAllocation","nameLocation":"2463:32:100","nodeType":"VariableDeclaration","scope":64813,"src":"2457:38:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":64810,"name":"uint8","nodeType":"ElementaryTypeName","src":"2457:5:100","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2456:40:100"}},{"id":64818,"nodeType":"EventDefinition","src":"2729:71:100","nodes":[],"anonymous":false,"documentation":{"id":64814,"nodeType":"StructuredDocumentation","src":"2503:221:100","text":"@notice Emitted when the delay in blocks before a new reward allocation can go into effect has been set.\n @param rewardAllocationBlockDelay The delay in blocks before a new reward allocation can go into effect."},"eventSelector":"d30a76f5419042e46e49eaf91b6a0f0feaaa673b6db586a63d3e8e79d4bf2081","name":"RewardAllocationBlockDelaySet","nameLocation":"2735:29:100","parameters":{"id":64817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64816,"indexed":false,"mutability":"mutable","name":"rewardAllocationBlockDelay","nameLocation":"2772:26:100","nodeType":"VariableDeclaration","scope":64818,"src":"2765:33:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":64815,"name":"uint64","nodeType":"ElementaryTypeName","src":"2765:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2764:35:100"}},{"id":64827,"nodeType":"EventDefinition","src":"3122:107:100","nodes":[],"anonymous":false,"documentation":{"id":64819,"nodeType":"StructuredDocumentation","src":"2806:311:100","text":"@notice Emitted when the vault's whitelisted status have been updated.\n @param receiver The address to remove or add as whitelisted vault.\n @param isWhitelisted The whitelist status; true if the receiver is being whitelisted, false otherwise.\n @param metadata The metadata of the vault."},"eventSelector":"ad865159180d43e1aedae6624a0e9e20d86e07afb82a96f8f9a8b2f3294e16c0","name":"VaultWhitelistedStatusUpdated","nameLocation":"3128:29:100","parameters":{"id":64826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64821,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"3174:8:100","nodeType":"VariableDeclaration","scope":64827,"src":"3158:24:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64820,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:100","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":64823,"indexed":true,"mutability":"mutable","name":"isWhitelisted","nameLocation":"3197:13:100","nodeType":"VariableDeclaration","scope":64827,"src":"3184:26:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64822,"name":"bool","nodeType":"ElementaryTypeName","src":"3184:4:100","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":64825,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"3219:8:100","nodeType":"VariableDeclaration","scope":64827,"src":"3212:15:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":64824,"name":"string","nodeType":"ElementaryTypeName","src":"3212:6:100","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:71:100"}},{"id":64834,"nodeType":"EventDefinition","src":"3444:81:100","nodes":[],"anonymous":false,"documentation":{"id":64828,"nodeType":"StructuredDocumentation","src":"3235:204:100","text":" @notice Emitted when the metadata of a whitelisted vault has been updated.\n @param receiver The address of the whitelisted vault.\n @param metadata The metadata of the vault."},"eventSelector":"b10c3a0623fdc435deba8729692b1a7c6c1886b7466c8cffa3ccdb42042ffbc5","name":"WhitelistedVaultMetadataUpdated","nameLocation":"3450:31:100","parameters":{"id":64833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64830,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"3498:8:100","nodeType":"VariableDeclaration","scope":64834,"src":"3482:24:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64829,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:100","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":64832,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"3515:8:100","nodeType":"VariableDeclaration","scope":64834,"src":"3508:15:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":64831,"name":"string","nodeType":"ElementaryTypeName","src":"3508:6:100","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3481:43:100"}},{"id":64845,"nodeType":"EventDefinition","src":"3804:90:100","nodes":[],"anonymous":false,"documentation":{"id":64835,"nodeType":"StructuredDocumentation","src":"3531:268:100","text":" @notice Emitted when a new reward allocation has been queued.\n @param valPubkey The validator's pubkey.\n @param startBlock The block that the reward allocation goes into effect.\n @param weights The weights of the reward allocation."},"eventSelector":"22fe555512d9a04d20e3735ac5fe7a73227c2c6398f1453a5d60ce7aaf5de2ae","name":"QueueRewardAllocation","nameLocation":"3810:21:100","parameters":{"id":64844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64837,"indexed":true,"mutability":"mutable","name":"valPubkey","nameLocation":"3846:9:100","nodeType":"VariableDeclaration","scope":64845,"src":"3832:23:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64836,"name":"bytes","nodeType":"ElementaryTypeName","src":"3832:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":64839,"indexed":false,"mutability":"mutable","name":"startBlock","nameLocation":"3864:10:100","nodeType":"VariableDeclaration","scope":64845,"src":"3857:17:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":64838,"name":"uint64","nodeType":"ElementaryTypeName","src":"3857:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":64843,"indexed":false,"mutability":"mutable","name":"weights","nameLocation":"3885:7:100","nodeType":"VariableDeclaration","scope":64845,"src":"3876:16:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_memory_ptr_$dyn_memory_ptr","typeString":"struct IBeraChef_V1.Weight[]"},"typeName":{"baseType":{"id":64841,"nodeType":"UserDefinedTypeName","pathNode":{"id":64840,"name":"Weight","nameLocations":["3876:6:100"],"nodeType":"IdentifierPath","referencedDeclaration":64796,"src":"3876:6:100"},"referencedDeclaration":64796,"src":"3876:6:100","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$64796_storage_ptr","typeString":"struct IBeraChef_V1.Weight"}},"id":64842,"nodeType":"ArrayTypeName","src":"3876:8:100","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V1.Weight[]"}},"visibility":"internal"}],"src":"3831:62:100"}},{"id":64856,"nodeType":"EventDefinition","src":"4176:93:100","nodes":[],"anonymous":false,"documentation":{"id":64846,"nodeType":"StructuredDocumentation","src":"3900:271:100","text":" @notice Emitted when a new reward allocation has been activated.\n @param valPubkey The validator's pubkey.\n @param startBlock The block that the reward allocation goes into effect.\n @param weights The weights of the reward allocation."},"eventSelector":"09fed3850dff4fef07a5284847da937f94021882ecab1c143fcacd69e5451bd8","name":"ActivateRewardAllocation","nameLocation":"4182:24:100","parameters":{"id":64855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64848,"indexed":true,"mutability":"mutable","name":"valPubkey","nameLocation":"4221:9:100","nodeType":"VariableDeclaration","scope":64856,"src":"4207:23:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64847,"name":"bytes","nodeType":"ElementaryTypeName","src":"4207:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":64850,"indexed":false,"mutability":"mutable","name":"startBlock","nameLocation":"4239:10:100","nodeType":"VariableDeclaration","scope":64856,"src":"4232:17:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":64849,"name":"uint64","nodeType":"ElementaryTypeName","src":"4232:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":64854,"indexed":false,"mutability":"mutable","name":"weights","nameLocation":"4260:7:100","nodeType":"VariableDeclaration","scope":64856,"src":"4251:16:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_memory_ptr_$dyn_memory_ptr","typeString":"struct IBeraChef_V1.Weight[]"},"typeName":{"baseType":{"id":64852,"nodeType":"UserDefinedTypeName","pathNode":{"id":64851,"name":"Weight","nameLocations":["4251:6:100"],"nodeType":"IdentifierPath","referencedDeclaration":64796,"src":"4251:6:100"},"referencedDeclaration":64796,"src":"4251:6:100","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$64796_storage_ptr","typeString":"struct IBeraChef_V1.Weight"}},"id":64853,"nodeType":"ArrayTypeName","src":"4251:8:100","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V1.Weight[]"}},"visibility":"internal"}],"src":"4206:62:100"}},{"id":64862,"nodeType":"EventDefinition","src":"4444:68:100","nodes":[],"anonymous":false,"documentation":{"id":64857,"nodeType":"StructuredDocumentation","src":"4275:164:100","text":" @notice Emitted when the governance module has set a new default reward allocation.\n @param rewardAllocation The default reward allocation."},"eventSelector":"63a1be039047941d4150a7feb1920b5fadcbf022e1a21334fba542a52eabdaf7","name":"SetDefaultRewardAllocation","nameLocation":"4450:26:100","parameters":{"id":64861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64860,"indexed":false,"mutability":"mutable","name":"rewardAllocation","nameLocation":"4494:16:100","nodeType":"VariableDeclaration","scope":64862,"src":"4477:33:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_memory_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"},"typeName":{"id":64859,"nodeType":"UserDefinedTypeName","pathNode":{"id":64858,"name":"RewardAllocation","nameLocations":["4477:16:100"],"nodeType":"IdentifierPath","referencedDeclaration":64790,"src":"4477:16:100"},"referencedDeclaration":64790,"src":"4477:16:100","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_storage_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"}},"visibility":"internal"}],"src":"4476:35:100"}},{"id":64867,"nodeType":"EventDefinition","src":"4700:61:100","nodes":[],"anonymous":false,"documentation":{"id":64863,"nodeType":"StructuredDocumentation","src":"4518:177:100","text":" @notice Emitted when the commission change delay has been set.\n @param commissionChangeDelay The delay in blocks to activate a queued commission change."},"eventSelector":"64362e066c3e2aa8c9ade9c3c475eca8e99702a002a5adbe13a4404fc05dfee3","name":"CommissionChangeDelaySet","nameLocation":"4706:24:100","parameters":{"id":64866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64865,"indexed":false,"mutability":"mutable","name":"commissionChangeDelay","nameLocation":"4738:21:100","nodeType":"VariableDeclaration","scope":64867,"src":"4731:28:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":64864,"name":"uint64","nodeType":"ElementaryTypeName","src":"4731:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4730:30:100"}},{"id":64874,"nodeType":"EventDefinition","src":"5030:80:100","nodes":[],"anonymous":false,"documentation":{"id":64868,"nodeType":"StructuredDocumentation","src":"4767:258:100","text":" @notice Emitted when a validator's commission rate on incentive tokens has been queued.\n @param valPubkey The validator's pubkey.\n @param queuedCommissionRate The queued commission rate of the validator on the incentive tokens."},"eventSelector":"6c1fd7992c5cda804ff20cff8ec6eb7622a74aa084ff0f7bfd15b9f30a4a5a73","name":"QueuedValCommission","nameLocation":"5036:19:100","parameters":{"id":64873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64870,"indexed":true,"mutability":"mutable","name":"valPubkey","nameLocation":"5070:9:100","nodeType":"VariableDeclaration","scope":64874,"src":"5056:23:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64869,"name":"bytes","nodeType":"ElementaryTypeName","src":"5056:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":64872,"indexed":false,"mutability":"mutable","name":"queuedCommissionRate","nameLocation":"5088:20:100","nodeType":"VariableDeclaration","scope":64874,"src":"5081:27:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64871,"name":"uint96","nodeType":"ElementaryTypeName","src":"5081:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"5055:54:100"}},{"id":64883,"nodeType":"EventDefinition","src":"5473:100:100","nodes":[],"anonymous":false,"documentation":{"id":64875,"nodeType":"StructuredDocumentation","src":"5116:352:100","text":" @notice Emitted when the commission rate of a validator on incentive tokens has been set.\n @param valPubkey The validator's pubkey.\n @param oldCommissionRate The old commission rate of the validator on the incentive tokens.\n @param newCommissionRate The new commission rate of the validator on the incentive tokens."},"eventSelector":"154e6b9420982ca77402c0dd255e23fef1199d854e122d1231ec746266d0cf48","name":"ValCommissionSet","nameLocation":"5479:16:100","parameters":{"id":64882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64877,"indexed":true,"mutability":"mutable","name":"valPubkey","nameLocation":"5510:9:100","nodeType":"VariableDeclaration","scope":64883,"src":"5496:23:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64876,"name":"bytes","nodeType":"ElementaryTypeName","src":"5496:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":64879,"indexed":false,"mutability":"mutable","name":"oldCommissionRate","nameLocation":"5528:17:100","nodeType":"VariableDeclaration","scope":64883,"src":"5521:24:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64878,"name":"uint96","nodeType":"ElementaryTypeName","src":"5521:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":64881,"indexed":false,"mutability":"mutable","name":"newCommissionRate","nameLocation":"5554:17:100","nodeType":"VariableDeclaration","scope":64883,"src":"5547:24:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64880,"name":"uint96","nodeType":"ElementaryTypeName","src":"5547:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"5495:77:100"}},{"id":64892,"nodeType":"FunctionDefinition","src":"6072:109:100","nodes":[],"documentation":{"id":64884,"nodeType":"StructuredDocumentation","src":"5862:205:100","text":" @notice Returns the active reward allocation for validator with given pubkey\n @param valPubkey The validator's pubkey.\n @return rewardAllocation The active reward allocation."},"functionSelector":"da6f7563","implemented":false,"kind":"function","modifiers":[],"name":"getActiveRewardAllocation","nameLocation":"6081:25:100","parameters":{"id":64887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64886,"mutability":"mutable","name":"valPubkey","nameLocation":"6122:9:100","nodeType":"VariableDeclaration","scope":64892,"src":"6107:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64885,"name":"bytes","nodeType":"ElementaryTypeName","src":"6107:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6106:26:100"},"returnParameters":{"id":64891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64892,"src":"6156:23:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_memory_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"},"typeName":{"id":64889,"nodeType":"UserDefinedTypeName","pathNode":{"id":64888,"name":"RewardAllocation","nameLocations":["6156:16:100"],"nodeType":"IdentifierPath","referencedDeclaration":64790,"src":"6156:16:100"},"referencedDeclaration":64790,"src":"6156:16:100","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_storage_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"}},"visibility":"internal"}],"src":"6155:25:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64901,"nodeType":"FunctionDefinition","src":"6399:109:100","nodes":[],"documentation":{"id":64893,"nodeType":"StructuredDocumentation","src":"6187:207:100","text":" @notice Returns the queued reward allocation for a validator with given pubkey\n @param valPubkey The validator's pubkey.\n @return rewardAllocation The queued reward allocation."},"functionSelector":"4ecbf5c0","implemented":false,"kind":"function","modifiers":[],"name":"getQueuedRewardAllocation","nameLocation":"6408:25:100","parameters":{"id":64896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64895,"mutability":"mutable","name":"valPubkey","nameLocation":"6449:9:100","nodeType":"VariableDeclaration","scope":64901,"src":"6434:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64894,"name":"bytes","nodeType":"ElementaryTypeName","src":"6434:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6433:26:100"},"returnParameters":{"id":64900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64901,"src":"6483:23:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_memory_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"},"typeName":{"id":64898,"nodeType":"UserDefinedTypeName","pathNode":{"id":64897,"name":"RewardAllocation","nameLocations":["6483:16:100"],"nodeType":"IdentifierPath","referencedDeclaration":64790,"src":"6483:16:100"},"referencedDeclaration":64790,"src":"6483:16:100","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_storage_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"}},"visibility":"internal"}],"src":"6482:25:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64910,"nodeType":"FunctionDefinition","src":"6820:112:100","nodes":[],"documentation":{"id":64902,"nodeType":"StructuredDocumentation","src":"6514:301:100","text":" @notice Returns the active reward allocation set by the validator with given pubkey.\n @dev This will return active reward allocation set by validators even if its not valid.\n @param valPubkey The validator's pubkey.\n @return rewardAllocation The reward allocation."},"functionSelector":"230288ce","implemented":false,"kind":"function","modifiers":[],"name":"getSetActiveRewardAllocation","nameLocation":"6829:28:100","parameters":{"id":64905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64904,"mutability":"mutable","name":"valPubkey","nameLocation":"6873:9:100","nodeType":"VariableDeclaration","scope":64910,"src":"6858:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64903,"name":"bytes","nodeType":"ElementaryTypeName","src":"6858:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6857:26:100"},"returnParameters":{"id":64909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64910,"src":"6907:23:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_memory_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"},"typeName":{"id":64907,"nodeType":"UserDefinedTypeName","pathNode":{"id":64906,"name":"RewardAllocation","nameLocations":["6907:16:100"],"nodeType":"IdentifierPath","referencedDeclaration":64790,"src":"6907:16:100"},"referencedDeclaration":64790,"src":"6907:16:100","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_storage_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"}},"visibility":"internal"}],"src":"6906:25:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64917,"nodeType":"FunctionDefinition","src":"7123:86:100","nodes":[],"documentation":{"id":64911,"nodeType":"StructuredDocumentation","src":"6938:180:100","text":" @notice Returns the default reward allocation for validators that do not have a reward allocation.\n @return rewardAllocation The default reward allocation."},"functionSelector":"17dbf270","implemented":false,"kind":"function","modifiers":[],"name":"getDefaultRewardAllocation","nameLocation":"7132:26:100","parameters":{"id":64912,"nodeType":"ParameterList","parameters":[],"src":"7158:2:100"},"returnParameters":{"id":64916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64917,"src":"7184:23:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_memory_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"},"typeName":{"id":64914,"nodeType":"UserDefinedTypeName","pathNode":{"id":64913,"name":"RewardAllocation","nameLocations":["7184:16:100"],"nodeType":"IdentifierPath","referencedDeclaration":64790,"src":"7184:16:100"},"referencedDeclaration":64790,"src":"7184:16:100","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_storage_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"}},"visibility":"internal"}],"src":"7183:25:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64927,"nodeType":"FunctionDefinition","src":"7538:161:100","nodes":[],"documentation":{"id":64918,"nodeType":"StructuredDocumentation","src":"7215:318:100","text":" @notice Returns the status of whether a queued reward allocation is ready to be activated.\n @param valPubkey The validator's pubkey.\n @param blockNumber The block number to be queried.\n @return isReady True if the queued reward allocation is ready to be activated, false otherwise."},"functionSelector":"722f8e0a","implemented":false,"kind":"function","modifiers":[],"name":"isQueuedRewardAllocationReady","nameLocation":"7547:29:100","parameters":{"id":64923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64920,"mutability":"mutable","name":"valPubkey","nameLocation":"7601:9:100","nodeType":"VariableDeclaration","scope":64927,"src":"7586:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64919,"name":"bytes","nodeType":"ElementaryTypeName","src":"7586:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":64922,"mutability":"mutable","name":"blockNumber","nameLocation":"7628:11:100","nodeType":"VariableDeclaration","scope":64927,"src":"7620:19:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64921,"name":"uint256","nodeType":"ElementaryTypeName","src":"7620:7:100","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7576:69:100"},"returnParameters":{"id":64926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64927,"src":"7693:4:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64924,"name":"bool","nodeType":"ElementaryTypeName","src":"7693:4:100","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7692:6:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64933,"nodeType":"FunctionDefinition","src":"8084:48:100","nodes":[],"documentation":{"id":64928,"nodeType":"StructuredDocumentation","src":"7705:374:100","text":" @notice Returns the status of whether the BeraChef contract is ready to be used.\n @dev This function should be used by all contracts that depend on a system call.\n @dev This will return false if the governance module has not set a default reward allocation yet.\n @return isReady True if the BeraChef is ready to be used, false otherwise."},"functionSelector":"a094a031","implemented":false,"kind":"function","modifiers":[],"name":"isReady","nameLocation":"8093:7:100","parameters":{"id":64929,"nodeType":"ParameterList","parameters":[],"src":"8100:2:100"},"returnParameters":{"id":64932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64933,"src":"8126:4:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64930,"name":"bool","nodeType":"ElementaryTypeName","src":"8126:4:100","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8125:6:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64942,"nodeType":"FunctionDefinition","src":"8400:157:100","nodes":[],"documentation":{"id":64934,"nodeType":"StructuredDocumentation","src":"8138:257:100","text":" @notice Returns the queued commission struct of a validator on an incentive tokens.\n @param valPubkey The validator's pubkey.\n @return queuedCommissionRate The queued commission struct of the validator on the incentive tokens."},"functionSelector":"a83f0817","implemented":false,"kind":"function","modifiers":[],"name":"getValQueuedCommissionOnIncentiveTokens","nameLocation":"8409:39:100","parameters":{"id":64937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64936,"mutability":"mutable","name":"valPubkey","nameLocation":"8464:9:100","nodeType":"VariableDeclaration","scope":64942,"src":"8449:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64935,"name":"bytes","nodeType":"ElementaryTypeName","src":"8449:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8448:26:100"},"returnParameters":{"id":64941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64942,"src":"8522:33:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedCommissionRateChange_$64802_memory_ptr","typeString":"struct IBeraChef_V1.QueuedCommissionRateChange"},"typeName":{"id":64939,"nodeType":"UserDefinedTypeName","pathNode":{"id":64938,"name":"QueuedCommissionRateChange","nameLocations":["8522:26:100"],"nodeType":"IdentifierPath","referencedDeclaration":64802,"src":"8522:26:100"},"referencedDeclaration":64802,"src":"8522:26:100","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedCommissionRateChange_$64802_storage_ptr","typeString":"struct IBeraChef_V1.QueuedCommissionRateChange"}},"visibility":"internal"}],"src":"8521:35:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64950,"nodeType":"FunctionDefinition","src":"8876:100:100","nodes":[],"documentation":{"id":64943,"nodeType":"StructuredDocumentation","src":"8563:308:100","text":" @notice Returns the commission rate of a validator on an incentive tokens.\n @dev Default commission rate is 5% if the commission was never set.\n @param valPubkey The validator's pubkey.\n @return commissionRate The commission rate of the validator on the incentive tokens."},"functionSelector":"61b8b560","implemented":false,"kind":"function","modifiers":[],"name":"getValCommissionOnIncentiveTokens","nameLocation":"8885:33:100","parameters":{"id":64946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64945,"mutability":"mutable","name":"valPubkey","nameLocation":"8934:9:100","nodeType":"VariableDeclaration","scope":64950,"src":"8919:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64944,"name":"bytes","nodeType":"ElementaryTypeName","src":"8919:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8918:26:100"},"returnParameters":{"id":64949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64950,"src":"8968:6:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":64947,"name":"uint96","nodeType":"ElementaryTypeName","src":"8968:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"8967:8:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64960,"nodeType":"FunctionDefinition","src":"9305:175:100","nodes":[],"documentation":{"id":64951,"nodeType":"StructuredDocumentation","src":"8982:318:100","text":" @notice Returns the validator's share of the incentive tokens based on the validator's commission rate.\n @param valPubkey The validator's pubkey.\n @param incentiveTokenAmount The amount of the incentive tokens.\n @return validatorShare The validator's share of the incentive tokens."},"functionSelector":"3909cbd5","implemented":false,"kind":"function","modifiers":[],"name":"getValidatorIncentiveTokenShare","nameLocation":"9314:31:100","parameters":{"id":64956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64953,"mutability":"mutable","name":"valPubkey","nameLocation":"9370:9:100","nodeType":"VariableDeclaration","scope":64960,"src":"9355:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64952,"name":"bytes","nodeType":"ElementaryTypeName","src":"9355:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":64955,"mutability":"mutable","name":"incentiveTokenAmount","nameLocation":"9397:20:100","nodeType":"VariableDeclaration","scope":64960,"src":"9389:28:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64954,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:100","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9345:78:100"},"returnParameters":{"id":64959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64960,"src":"9471:7:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64957,"name":"uint256","nodeType":"ElementaryTypeName","src":"9471:7:100","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9470:9:100"},"scope":65036,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":64966,"nodeType":"FunctionDefinition","src":"9843:95:100","nodes":[],"documentation":{"id":64961,"nodeType":"StructuredDocumentation","src":"9769:69:100","text":"@notice Sets the maximum number of weights per reward allocation."},"functionSelector":"66204c78","implemented":false,"kind":"function","modifiers":[],"name":"setMaxNumWeightsPerRewardAllocation","nameLocation":"9852:35:100","parameters":{"id":64964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64963,"mutability":"mutable","name":"_maxNumWeightsPerRewardAllocation","nameLocation":"9894:33:100","nodeType":"VariableDeclaration","scope":64966,"src":"9888:39:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":64962,"name":"uint8","nodeType":"ElementaryTypeName","src":"9888:5:100","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9887:41:100"},"returnParameters":{"id":64965,"nodeType":"ParameterList","parameters":[],"src":"9937:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":64972,"nodeType":"FunctionDefinition","src":"10031:84:100","nodes":[],"documentation":{"id":64967,"nodeType":"StructuredDocumentation","src":"9944:82:100","text":"@notice Sets the delay in blocks before a new reward allocation can be queued."},"functionSelector":"9ca2626c","implemented":false,"kind":"function","modifiers":[],"name":"setRewardAllocationBlockDelay","nameLocation":"10040:29:100","parameters":{"id":64970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64969,"mutability":"mutable","name":"_rewardAllocationBlockDelay","nameLocation":"10077:27:100","nodeType":"VariableDeclaration","scope":64972,"src":"10070:34:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":64968,"name":"uint64","nodeType":"ElementaryTypeName","src":"10070:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10069:36:100"},"returnParameters":{"id":64971,"nodeType":"ParameterList","parameters":[],"src":"10114:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":64982,"nodeType":"FunctionDefinition","src":"10507:106:100","nodes":[],"documentation":{"id":64973,"nodeType":"StructuredDocumentation","src":"10121:381:100","text":" @notice Updates the vault's whitelisted status\n @notice The caller of this function must be the governance module account.\n @param receiver The address to remove or add as whitelisted vault.\n @param isWhitelisted The whitelist status; true if the receiver is being whitelisted, false otherwise.\n @param metadata The metadata of the vault."},"functionSelector":"fb9f6fde","implemented":false,"kind":"function","modifiers":[],"name":"setVaultWhitelistedStatus","nameLocation":"10516:25:100","parameters":{"id":64980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64975,"mutability":"mutable","name":"receiver","nameLocation":"10550:8:100","nodeType":"VariableDeclaration","scope":64982,"src":"10542:16:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64974,"name":"address","nodeType":"ElementaryTypeName","src":"10542:7:100","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":64977,"mutability":"mutable","name":"isWhitelisted","nameLocation":"10565:13:100","nodeType":"VariableDeclaration","scope":64982,"src":"10560:18:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64976,"name":"bool","nodeType":"ElementaryTypeName","src":"10560:4:100","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":64979,"mutability":"mutable","name":"metadata","nameLocation":"10594:8:100","nodeType":"VariableDeclaration","scope":64982,"src":"10580:22:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":64978,"name":"string","nodeType":"ElementaryTypeName","src":"10580:6:100","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10541:62:100"},"returnParameters":{"id":64981,"nodeType":"ParameterList","parameters":[],"src":"10612:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":64990,"nodeType":"FunctionDefinition","src":"10977:91:100","nodes":[],"documentation":{"id":64983,"nodeType":"StructuredDocumentation","src":"10619:353:100","text":" @notice Updates the metadata of a whitelisted vault, reverts if vault is not whitelisted.\n @notice The caller of this function must be the governance module account.\n @param receiver The address of the whitelisted vault.\n @param metadata The metadata of the vault, to associate info with the vault in the events log."},"functionSelector":"69ed1708","implemented":false,"kind":"function","modifiers":[],"name":"updateWhitelistedVaultMetadata","nameLocation":"10986:30:100","parameters":{"id":64988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64985,"mutability":"mutable","name":"receiver","nameLocation":"11025:8:100","nodeType":"VariableDeclaration","scope":64990,"src":"11017:16:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64984,"name":"address","nodeType":"ElementaryTypeName","src":"11017:7:100","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":64987,"mutability":"mutable","name":"metadata","nameLocation":"11049:8:100","nodeType":"VariableDeclaration","scope":64990,"src":"11035:22:100","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":64986,"name":"string","nodeType":"ElementaryTypeName","src":"11035:6:100","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11016:42:100"},"returnParameters":{"id":64989,"nodeType":"ParameterList","parameters":[],"src":"11067:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":64997,"nodeType":"FunctionDefinition","src":"11334:89:100","nodes":[],"documentation":{"id":64991,"nodeType":"StructuredDocumentation","src":"11074:255:100","text":" @notice Sets the default reward allocation for validators that do not have a reward allocation.\n @dev The caller of this function must be the governance module account.\n @param rewardAllocation The default reward allocation."},"functionSelector":"c89f2665","implemented":false,"kind":"function","modifiers":[],"name":"setDefaultRewardAllocation","nameLocation":"11343:26:100","parameters":{"id":64995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64994,"mutability":"mutable","name":"rewardAllocation","nameLocation":"11396:16:100","nodeType":"VariableDeclaration","scope":64997,"src":"11370:42:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_calldata_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"},"typeName":{"id":64993,"nodeType":"UserDefinedTypeName","pathNode":{"id":64992,"name":"RewardAllocation","nameLocations":["11370:16:100"],"nodeType":"IdentifierPath","referencedDeclaration":64790,"src":"11370:16:100"},"referencedDeclaration":64790,"src":"11370:16:100","typeDescriptions":{"typeIdentifier":"t_struct$_RewardAllocation_$64790_storage_ptr","typeString":"struct IBeraChef_V1.RewardAllocation"}},"visibility":"internal"}],"src":"11369:44:100"},"returnParameters":{"id":64996,"nodeType":"ParameterList","parameters":[],"src":"11422:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65009,"nodeType":"FunctionDefinition","src":"12205:153:100","nodes":[],"documentation":{"id":64998,"nodeType":"StructuredDocumentation","src":"11712:488:100","text":" @notice Add a new reward allocation to the queue for validator with given pubkey. Does not allow overwriting of\n existing queued reward allocation.\n @dev The weights of the reward allocation must add up to 100% or 1e4.\n Only whitelisted pools may be used as well.\n @param valPubkey The validator's pubkey.\n @param startBlock The block that the reward allocation goes into effect.\n @param weights The weights of the reward allocation."},"functionSelector":"e5eb90aa","implemented":false,"kind":"function","modifiers":[],"name":"queueNewRewardAllocation","nameLocation":"12214:24:100","parameters":{"id":65007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65000,"mutability":"mutable","name":"valPubkey","nameLocation":"12263:9:100","nodeType":"VariableDeclaration","scope":65009,"src":"12248:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64999,"name":"bytes","nodeType":"ElementaryTypeName","src":"12248:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":65002,"mutability":"mutable","name":"startBlock","nameLocation":"12289:10:100","nodeType":"VariableDeclaration","scope":65009,"src":"12282:17:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":65001,"name":"uint64","nodeType":"ElementaryTypeName","src":"12282:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":65006,"mutability":"mutable","name":"weights","nameLocation":"12327:7:100","nodeType":"VariableDeclaration","scope":65009,"src":"12309:25:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IBeraChef_V1.Weight[]"},"typeName":{"baseType":{"id":65004,"nodeType":"UserDefinedTypeName","pathNode":{"id":65003,"name":"Weight","nameLocations":["12309:6:100"],"nodeType":"IdentifierPath","referencedDeclaration":64796,"src":"12309:6:100"},"referencedDeclaration":64796,"src":"12309:6:100","typeDescriptions":{"typeIdentifier":"t_struct$_Weight_$64796_storage_ptr","typeString":"struct IBeraChef_V1.Weight"}},"id":65005,"nodeType":"ArrayTypeName","src":"12309:8:100","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Weight_$64796_storage_$dyn_storage_ptr","typeString":"struct IBeraChef_V1.Weight[]"}},"visibility":"internal"}],"src":"12238:102:100"},"returnParameters":{"id":65008,"nodeType":"ParameterList","parameters":[],"src":"12357:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65015,"nodeType":"FunctionDefinition","src":"12593:80:100","nodes":[],"documentation":{"id":65010,"nodeType":"StructuredDocumentation","src":"12364:224:100","text":" @notice Activates the queued reward allocation for a validator if its ready for the current block.\n @dev Should be called by the distribution contract.\n @param valPubkey The validator's pubkey."},"functionSelector":"6ed0bf9a","implemented":false,"kind":"function","modifiers":[],"name":"activateReadyQueuedRewardAllocation","nameLocation":"12602:35:100","parameters":{"id":65013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65012,"mutability":"mutable","name":"valPubkey","nameLocation":"12653:9:100","nodeType":"VariableDeclaration","scope":65015,"src":"12638:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65011,"name":"bytes","nodeType":"ElementaryTypeName","src":"12638:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12637:26:100"},"returnParameters":{"id":65014,"nodeType":"ParameterList","parameters":[],"src":"12672:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65021,"nodeType":"FunctionDefinition","src":"12888:74:100","nodes":[],"documentation":{"id":65016,"nodeType":"StructuredDocumentation","src":"12679:204:100","text":" @notice Sets the commission change delay.\n @dev Only owner can call this function.\n @param _commissionChangeDelay The delay in blocks to activate a queued commission change."},"functionSelector":"7239e8ca","implemented":false,"kind":"function","modifiers":[],"name":"setCommissionChangeDelay","nameLocation":"12897:24:100","parameters":{"id":65019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65018,"mutability":"mutable","name":"_commissionChangeDelay","nameLocation":"12929:22:100","nodeType":"VariableDeclaration","scope":65021,"src":"12922:29:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":65017,"name":"uint64","nodeType":"ElementaryTypeName","src":"12922:6:100","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12921:31:100"},"returnParameters":{"id":65020,"nodeType":"ParameterList","parameters":[],"src":"12961:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65029,"nodeType":"FunctionDefinition","src":"13353:86:100","nodes":[],"documentation":{"id":65022,"nodeType":"StructuredDocumentation","src":"12968:380:100","text":" @notice Queues a commission rate change for a validator on incentive tokens.\n @dev The caller of this function must be the validator operator address.\n @dev Revert if already a commission rate change is queued.\n @param valPubkey The validator's pubkey.\n @param commissionRate The commission rate of the validator on the incentive tokens."},"functionSelector":"8f7e0f0b","implemented":false,"kind":"function","modifiers":[],"name":"queueValCommission","nameLocation":"13362:18:100","parameters":{"id":65027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65024,"mutability":"mutable","name":"valPubkey","nameLocation":"13396:9:100","nodeType":"VariableDeclaration","scope":65029,"src":"13381:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65023,"name":"bytes","nodeType":"ElementaryTypeName","src":"13381:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":65026,"mutability":"mutable","name":"commissionRate","nameLocation":"13414:14:100","nodeType":"VariableDeclaration","scope":65029,"src":"13407:21:100","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":65025,"name":"uint96","nodeType":"ElementaryTypeName","src":"13407:6:100","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13380:49:100"},"returnParameters":{"id":65028,"nodeType":"ParameterList","parameters":[],"src":"13438:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65035,"nodeType":"FunctionDefinition","src":"13597:72:100","nodes":[],"documentation":{"id":65030,"nodeType":"StructuredDocumentation","src":"13445:147:100","text":" @notice Activates the queued commission rate of a validator on incentive tokens.\n @param valPubkey The validator's pubkey."},"functionSelector":"37e4c5bf","implemented":false,"kind":"function","modifiers":[],"name":"activateQueuedValCommission","nameLocation":"13606:27:100","parameters":{"id":65033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65032,"mutability":"mutable","name":"valPubkey","nameLocation":"13649:9:100","nodeType":"VariableDeclaration","scope":65035,"src":"13634:24:100","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65031,"name":"bytes","nodeType":"ElementaryTypeName","src":"13634:5:100","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13633:26:100"},"returnParameters":{"id":65034,"nodeType":"ParameterList","parameters":[],"src":"13668:0:100"},"scope":65036,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":64781,"name":"IPOLErrors","nameLocations":["201:10:100"],"nodeType":"IdentifierPath","referencedDeclaration":81420,"src":"201:10:100"},"id":64782,"nodeType":"InheritanceSpecifier","src":"201:10:100"}],"canonicalName":"IBeraChef_V1","contractDependencies":[],"contractKind":"interface","documentation":{"id":64780,"nodeType":"StructuredDocumentation","src":"130:45:100","text":"@notice Interface of the BeraChef module"},"fullyImplemented":false,"linearizedBaseContracts":[65036,81420,68947],"name":"IBeraChef_V1","nameLocation":"185:12:100","scope":65037,"usedErrors":[68934,68936,68938,68940,68942,68944,68946,81272,81274,81276,81278,81280,81282,81284,81286,81288,81290,81292,81294,81296,81298,81300,81302,81304,81306,81308,81310,81312,81314,81316,81318,81320,81322,81324,81326,81328,81330,81332,81334,81336,81338,81340,81342,81344,81346,81348,81350,81352,81354,81356,81358,81360,81362,81364,81366,81368,81370,81372,81374,81376,81378,81381,81384,81387,81390,81393,81396,81399,81402,81405,81407,81409,81411,81413,81415,81417,81419],"usedEvents":[64813,64818,64827,64834,64845,64856,64862,64867,64874,64883]}],"license":"BUSL-1.1"},"id":100}